{"version":3,"sources":["actions/UserActions.js","reducers/user.js","actions/DataActions.js","reducers/stores.js","reducers/requests.js","reducers/request.js","reducers/cars.js","reducers/carmodels.js","reducers/carbrands.js","reducers/response.js","reducers/sto.js","reducers/index.js","store/configureStore.js","axios/init.js","axios/getData.js","axios/setData.js","components/pages/RequestsPage.jsx","components/pages/StoresPage.jsx","components/pages/SettingsPage.jsx","components/pages/STOPage.jsx","components/pages/HomePage.jsx","components/pages/DynamicRoutePage.jsx","components/pages/NewCarPage.jsx","components/pages/NewRequestPage.jsx","components/pages/ResponsesPage.jsx","components/pages/ResponsePage.jsx","components/pages/ChatPage.jsx","components/pages/CarsPage.jsx","components/pages/StoresList.jsx","axios/login.js","components/pages/LoginPage.jsx","routes.js","components/pages/PanelLeftPage.jsx","components/pages/PanelRightPage.jsx","components/pages/AboutPage.jsx","components/pages/FormPage.jsx","components/pages/NotFoundPage.jsx","index.js","components/App.jsx"],"names":["LOGIN_SUCCESS","handleLogin","callback","dispatch","type","payload","initialState","id","name","email","role_id","shop_id","SHOPS_REQUEST","CATEGORIES_REQUEST","REQUESTS","REQUEST","ADD_REQUEST","UPDATE_REQUEST","DELETE_REQUEST","RESPONSE","CARS","ADD_CAR","UPDATE_CAR","DELETE_CAR","CAR_BRANDS","CAR_MODELS","handleResponse","shops","description","address","phone","comment","categories","updated_at","Date","category","reqIndex","newState","carIndex","rootReducer","combineReducers","user","state","arguments","length","undefined","action","set","then","Object","objectSpread","stores","sto","requests","toConsumableArray","push","edited_req","findIndex","req","req_id","splice","request","response","cars","edited_car","car","car_id","carbrands","carmodels","store","createStore","applyMiddleware","thunk","logger","axios","require","defaults","baseURL","headers","post","get","AUTH_TOKEN","common","getData","classCallCheck","this","data","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","res","wrap","_context","prev","next","sent","status","abrupt","t0","console","log","stop","_x","apply","setData","_x2","dataPut","_ref2","_callee2","_context2","put","_x3","_x4","dataDelete","_ref3","_callee3","_context3","delete","_x5","getRequest","props","reqId","detect","get_data","Detector","online","value","handleRequest","RequestsPage","_this","possibleConstructorReturn","getPrototypeOf","call","deleteRequest","set_data","handleDeleteRequest","_this2","$f7","dialog","confirm","views","main","router","navigate","_this3","preloader","close","cat_id","cat","find","x","_this4","react_default","createElement","Fragment","framework7_react_esm","style","whiteSpace","mediaList","className","map","item","key","swipeout","onClick","open_request","after","created_at","toLocaleString","subtitle","answers_count","text","slot","material","answers","color","get_category","category_id","left","edit_request","right","deleteHandle","React","Component","connect","StoresPage","alert","_this$props","accordionList","sort","b","index","accordionItem","title","filter","y","forward","bind","SettingsPage","button","link","STOPage","initApplication","init","handleShops","handleCategories","handleRequests","handleCars","handleCarBrands","handleCarModels","HomePage","chgTitle","setState","initApp","hideToolbarOnScroll","pageContent","textColor","bgColor","dist","iconMd","bottom","tabbar","labels","tabLink","tabLinkActive","new_request","href","position","ios","md","animated","tabActive","pages_RequestsPage","pages_StoresPage","pages_STOPage","pages_SettingsPage","brands","models","RequestPage","backLink","strong","keys","$f7route","params","$f7router","back","NewCarPage","handleBrand","brand_id","car_brand_id","Number","modelSelectComponent","f7SmartSelect","setValue","handleModel","model_id","car_model_id","handleYear","year","handleData","defineProperty","sendCar","req_data","years","handleUpdateCar","updCarSuccess","open","handleAddCar","result","addCarSuccess","notification","create","icon","closeTimeout","vin","i","initData","carId","brandSelectComponent","yearSelectComponent","_this$state","self","smartSelect","ref","el","smartSelectParams","openIn","searchbar","searchbarPlaceholder","closeOnSelect","on","closed","getValue","brand","car_brand","model","car_model","label","floatingLabel","placeholder","onChange","event","target","fill","NewRequestPage","selected_shops","handleCarData","set_stores","sendRequest","handleUpdateRequest","updateRequestSuccess","handleAddRequests","addRequestSuccess","selectedShops","indexOf","outline","small","float","display","getResponse","resp_id","ResponsesPage","shop","noHairlinesMd","open_response","get_shop","is_new","price","_","getMessages","answer_id","loading","sendingData","show","setTimeout","hide","sendMessage","notificationOffline","handleSendingData","forEach","_x9","_x6","_x7","_x8","respMessages","closeButton","progressbar","messageValue","attachments","sheetVisible","typingMessage","messages","messagesData","message","date","images","responseInProgress","messagebarComponent","attachmentsVisible","change","onInput","handleMessage","iconIos","messagesComponent","image","avatar","footer","first","isFirstMessage","last","isLastMessage","tail","isTailMessage","dangerouslySetInnerHTML","__html","typing","header","concat","user_id","oldData","newData","isEqual","updateMessages","$f7ready","messagebar","f7Messagebar","f7Messages","intervalId","setInterval","clearInterval","previousMessage","isTitle","nextMessage","e","$$","parents","checked","unshift","$textareaEl","val","replace","trim","messagesToSend","attachment","clear","focus","nextProps","prevState","_default","people","onAttachmentDelete","deleteAttachment","handleAttachment","answer","Math","floor","random","person","carsPage","deleteCar","handleDeleteCar","newCar","editHandle","ShopsList","searchAll","query","items","found","toLowerCase","handleToggle","setShops","vlData","vl","inner","searchContainer","searchItem","searchIn","medialList","virtualList","virtualListParams","renderExternal","height","$theme","mediaItem","radio","top","topPosition","authorisation","login","_args2","password","application","access_token","user_details","LoginPage","authError","authSuccess","handleOnChange","prop","inputLogin","inputPassword","auth","success","_this$state2","loginScreen","form","authentication","routes","path","component","view","panelClose","defaultValue","input","min","max","step","resizable","Array","from","n","checkbox","defaultChecked","tag","raised","round","large","ChatPage","CarsPage","DynamicRoutePage","ResponsePage","StoresList","Framework7","use","Framework7React","ReactDOM","render","f7params","theme","es","themeDark","cover","reveal","popupClose","document","getElementById"],"mappings":"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","file":"static/js/main.8580128a.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport function handleLogin(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: callback,\n        })\n    }\n}","import {\n    LOGIN_SUCCESS,\n} from '../actions/UserActions'\n\nimport { set } from 'idb-keyval';\n\nconst initialState = {\n    id: 0,\n    name: '',\n    email: '',\n    role_id: 0,\n    shop_id: null,\n};\n\nexport function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            set('user', action.payload).then();\n            return { ...action.payload };\n        default:\n            return state\n    }\n}","export const SHOPS_REQUEST = 'SHOPS_REQUEST';\nexport const CATEGORIES_REQUEST = 'CATEGORIES_REQUEST';\nexport const REQUESTS = 'REQUESTS';\nexport const REQUEST = 'REQUEST';\nexport const ADD_REQUEST = 'ADD_REQUEST';\nexport const UPDATE_REQUEST = 'UPDATE_REQUEST';\nexport const DELETE_REQUEST = 'DELETE_REQUEST';\nexport const RESPONSE = 'RESPONSE';\nexport const CARS = 'CARS';\nexport const ADD_CAR = 'ADD_CAR';\nexport const UPDATE_CAR = 'UPDATE_CAR';\nexport const DELETE_CAR = 'DELETE_CAR';\nexport const CAR_BRANDS = 'CAR_BRANDS';\nexport const CAR_MODELS = 'CAR_MODELS';\n\nexport function handleShops(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_REQUEST,\n            payload: callback,\n        })\n    }\n}\nexport function handleCategories(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CATEGORIES_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUESTS,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleResponse(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: RESPONSE,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleUpdateRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type:  UPDATE_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleDeleteRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type:  DELETE_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleUpdateCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: UPDATE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleDeleteCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: DELETE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleCars(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CARS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarBrands(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_BRANDS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarModels(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_MODELS,\n            payload: payload,\n        })\n    }\n}","import {\n    SHOPS_REQUEST,\n    CATEGORIES_REQUEST,\n} from '../actions/DataActions'\n\nconst initialState = {\n    shops: [\n        {\n            id: 1,\n            name: 'Title',\n            description: 'Description',\n            address: 'address',\n            phone: 'phone',\n            comment: 'comment',\n            categories: [],\n            updated_at: new Date()\n        }],\n    categories: [\n        {\n            id: 1,\n            category: 'Title',\n        }],\n    };\n\nexport function storesReducer(state = initialState, action) {\n    switch (action.type) {\n        case SHOPS_REQUEST:\n            return {...state, shops: action.payload};\n        case CATEGORIES_REQUEST:\n            return {...state, categories: action.payload};\n\n        default:\n            return state\n    }\n}","import {ADD_REQUEST, DELETE_REQUEST, REQUESTS, UPDATE_REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet reqIndex;\n\nexport function requestsReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUESTS:\n            return action.payload;\n        case ADD_REQUEST:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_REQUEST:\n            const edited_req = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === edited_req.id));\n            newState[reqIndex] = edited_req;\n            return newState;\n        case DELETE_REQUEST:\n            const req_id = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === req_id));\n            newState.splice(reqIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function requestReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUEST:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {ADD_CAR, CARS, UPDATE_CAR, DELETE_CAR} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet carIndex = 0;\n\nexport function carsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CARS:\n            return action.payload;\n        case ADD_CAR:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_CAR:\n            const edited_car = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === edited_car.id));\n            newState[carIndex] = edited_car;\n            return newState;\n        case DELETE_CAR:\n            const car_id = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === car_id));\n            newState.splice(carIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {CAR_MODELS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carModelsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_MODELS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {CAR_BRANDS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carBrandsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_BRANDS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {RESPONSE} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function responseReducer(state = initialState, action) {\n    switch (action.type) {\n        case RESPONSE:\n            return action.payload;\n        default:\n            return state\n    }\n}","const initialState = [\n    {\n        id: 1,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 2,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 3,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n];\n\nexport function stoReducer(state = initialState, action) {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport { userReducer } from './user'\nimport { storesReducer } from './stores'\nimport { requestsReducer } from './requests'\nimport { requestReducer } from './request'\nimport { carsReducer } from './cars'\nimport { carModelsReducer } from './carmodels'\nimport { carBrandsReducer } from './carbrands'\nimport { responseReducer } from './response'\nimport { stoReducer } from './sto'\n\nexport const rootReducer = combineReducers({\n    user: userReducer,\n    stores: storesReducer,\n    sto: stoReducer,\n    requests: requestsReducer,\n    request: requestReducer,\n    response: responseReducer,\n    cars: carsReducer,\n    carbrands: carBrandsReducer,\n    carmodels: carModelsReducer,\n});","import { createStore, applyMiddleware } from 'redux'\nimport { rootReducer } from '../reducers'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));","import { get } from 'idb-keyval';\nexport const axios = require('axios');\n\naxios.defaults.baseURL = 'https://marshal.bh-app.ru/api';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nget('AUTH_TOKEN').then(AUTH_TOKEN => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n});\n\n\n","import { set } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class getData {\n    data = async (type) => {\n        const url = '/' + type;\n        const payload = {};\n        try {\n            let res =  await axios.get(url, payload);\n            if (res.status === 200) {\n                set(type, res.data).then();\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import {axios} from './init'\n\n\nexport class setData {\n    data = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.post(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataPut = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.put(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataDelete = async (type) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.delete(url);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {getData} from \"../../axios/getData\";\nimport {setData} from \"../../axios/setData\";\nimport {handleRequest,handleDeleteRequest} from \"../../actions/DataActions\";\n\nimport {Detector} from \"react-detect-offline\";\nimport {get} from \"idb-keyval\";\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    Block,\n    BlockTitle\n} from 'framework7-react';\n\nconst getRequest = async (props, reqId) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }else{\n        await get('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }\n};\n\nclass RequestsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    deleteRequest = (req_id) => {\n        const set_data = new setData();\n        if (req_id > 0) {\n            set_data.dataDelete('request-detele/'+req_id).then(() => {\n                this.props.handleDeleteRequest(req_id);\n            });\n        }\n    };\n\n    deleteHandle(req_id) {\n        const app = this.$f7;\n        app.dialog.confirm('Эта операция необратима', 'Удалить заявку?', () => this.deleteRequest(req_id), () => {});\n    }\n\n    edit_request(reqId) {\n        const app = this.$f7;\n        app.views.main.router.navigate('open_request/' + reqId + '/');\n    }\n\n    open_request(reqId) {\n        this.$f7.dialog.preloader('Получаем предложения...');\n        getRequest(this.props, reqId).then(() => {\n            this.$f7.views.main.router.navigate('requests/' + reqId + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    render() {\n        const {requests} = this.props;\n        return (\n            <React.Fragment>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете подать заявку на подбор необходимого вам автотовара или запчасти.</BlockTitle>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        requests.length === 0\n                            ?\n                            <Block>Вы пока не создавали запросов... Настало время?</Block>\n                            :\n                            requests.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    swipeout\n                                    onClick={() => this.open_request(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    subtitle={\"Предложений: \" + (item.answers_count) + \"\"}\n                                    text={item.text}\n                                >\n                                <span slot=\"title\">\n                                    <Icon\n                                        className={\"status-icon\"}\n                                        material={item.answers > 0 ? 'check_circle_outline' : 'access_time'}\n                                        color=\"blue\"\n                                    />\n                                    {this.get_category(item.category_id)}\n                                </span>\n                                    <SwipeoutActions left>\n                                        <SwipeoutButton color=\"blue\" onClick={() => this.edit_request(item.id)}>\n                                            <Icon material=\"edit\"/> Редактировать\n                                        </SwipeoutButton>\n                                    </SwipeoutActions>\n                                    <SwipeoutActions right>\n                                        <SwipeoutButton color=\"#cb2128\" onClick={() => this.deleteHandle(item.id)}>\n                                            <Icon material=\"delete\"/> Удалить\n                                        </SwipeoutButton>\n                                    </SwipeoutActions>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        requests: store.requests,\n        categories: store.stores.categories,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleRequest: request => dispatch(handleRequest(request)),\n        handleDeleteRequest: data => dispatch(handleDeleteRequest(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestsPage)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    AccordionContent,\n    BlockTitle,\n} from 'framework7-react';\n\nclass StoresPage extends React.Component {\n\n    forward() {\n        const app = this.$f7;\n        app.dialog.alert('Магазин добавлен в избранные', 'Избранное');\n    }\n\n    render() {\n        const {stores, categories} = this.props;\n        return (\n            <React.Fragment>\n                <BlockTitle>Выберите интересующую вас категорию автотоваров:</BlockTitle>\n                <List accordionList>\n                    {\n                        categories.sort((a, b) => {\n                            return a.category < b.category ? -1 : 1\n                        })\n                            .map((cat, index) =>\n                            <ListItem\n                                key={index}\n                                accordionItem\n                                title={cat.category}>\n                                <AccordionContent>\n                                    <List\n                                        mediaList\n                                        className={\"no-margin\"}\n                                    >\n                                        {\n                                            stores.filter(x => x.categories.find(y => y.id === cat.id)).map(item =>\n                                                <ListItem\n                                                    key={item.id}\n                                                    swipeout\n                                                    after={item.phone}\n                                                    subtitle={item.description}\n                                                    text={item.address}\n                                                >\n                                                    <span slot=\"title\">\n                                                        <Icon className={\"status-icon\"} material=\"store\"\n                                                              color=\"green\"/> {item.name}\n                                                    </span>\n                                                    <SwipeoutActions left>\n                                                        <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>\n                                                            <Icon material=\"favorite\"/> В избранное\n                                                        </SwipeoutButton>\n                                                    </SwipeoutActions>\n                                                </ListItem>\n                                            )\n                                        }\n                                    </List>\n                                </AccordionContent>\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        stores: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n\nexport default connect(mapStateToProps)(StoresPage)\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    List,\n    ListItem,\n    Icon,\n} from 'framework7-react';\n\nclass SettingsPage extends React.Component {\n\n    forward() {\n        const app = this.$f7;\n        app.dialog.alert('Favorite');\n    }\n\n    render() {\n        const {user} = this.props;\n        return (\n            <div>\n                <h1>Личный кабинет</h1>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {(user.id > 0)\n                        ?\n                        <ListItem\n                            subtitle={user.email}\n                        >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> {user.name}\n                        </span>\n                        </ListItem>\n                        :\n                        <ListItem\n                            button\n                            link=\"login/\"\n                            subtitle=\"После регистрации станут доступны дополнительные возможности\"\n                        >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> Вход\n                        </span>\n                        </ListItem>\n                    }\n\n\n                    <ListItem\n                        button\n                        link=\"/cars/\"\n                        subtitle=\"Для быстрого поиска\"\n                    >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"directions_car\" color=\"main\"/> Мои автомобили\n                        </span>\n                    </ListItem>\n                </List>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nexport default connect(mapStateToProps)(SettingsPage)","import React from 'react';\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n} from 'framework7-react';\nimport {connect} from \"react-redux\";\n\nclass STOPage extends React.Component {\n\n    forward() {\n        const app = this.$f7;\n        app.dialog.alert('СТО добавлено в избранные', 'Избранное');\n    }\n\n    render() {\n        const {sto} = this.props;\n        return (\n            <div>\n                <h1>СТО</h1>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        sto.map(item =>\n                            <ListItem\n                                key={item.id}\n                                swipeout\n                                after={item.updated_at.toLocaleString()}\n                                subtitle={item.description}\n                                text={item.address}\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"build\" color=\"purple\"/> {item.name}\n                                </span>\n                                <SwipeoutActions left>\n                                    <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>\n                                        <Icon material=\"favorite\"/> В избранное\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = store => {\n    return {\n        sto: store.sto,\n    }\n}\n\nexport default connect(mapStateToProps)(STOPage)","import React from 'react';\nimport { get } from 'idb-keyval';\nimport {connect} from \"react-redux\";\nimport { Offline, Detector } from \"react-detect-offline\";\n\nimport {\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Toolbar,\n    Tabs,\n    Tab,\n    Icon,\n    Fab\n} from 'framework7-react';\n\nimport RequestsPage from './RequestsPage';\nimport StoresPage from './StoresPage';\nimport SettingsPage from './SettingsPage';\nimport STOPage from './STOPage';\n\nimport {getData} from '../../axios/getData'\nimport {handleLogin} from \"../../actions/UserActions\";\nimport {\n    handleCategories,\n    handleShops,\n    handleRequests,\n    handleCars,\n    handleCarBrands,\n    handleCarModels,\n} from \"../../actions/DataActions\";\n\n// Load data from indexedDB to Store\nclass initApplication {\n    init = async (props) => {\n        await get('user').then(value => value !== undefined && props.handleLogin(value));\n\n        // from internet\n        let detect = new Detector();\n        if (detect.state.online) {\n            let get_data = new getData();\n            await get_data.data('shops').then(value => value !== undefined && props.handleShops(value));\n            await get_data.data('categories').then(value => value !== undefined && props.handleCategories(value));\n            await get_data.data('userRequests').then(value => value !== undefined && props.handleRequests(value));\n            await get_data.data('cars').then(value => value !== undefined && props.handleCars(value));\n            await get_data.data('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n            await get_data.data('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n        } else {\n            // from idb\n            await get('shops').then(value => value !== undefined && props.handleShops(value));\n            await get('categories').then(value => value !== undefined && props.handleCategories(value));\n            await get('userRequests').then(value => value !== undefined && props.handleRequests(value));\n            await get('cars').then(value => value !== undefined && props.handleCars(value));\n            await get('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n            await get('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n        }\n    }\n}\n\n\nclass HomePage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"Заявки\",\n        }\n    }\n\n    async componentDidMount() {\n        this.$f7.dialog.preloader('Загрузка...');\n        const initApp = new initApplication();\n        await initApp.init(this.props);\n        this.$f7.dialog.close();\n    }\n\n    new_request(reqId) {\n        const app = this.$f7;\n        app.views.main.router.navigate('/open_request/' + reqId + '/');\n        return false;\n    }\n\n    chgTitle = (title) => {\n        this.setState({title: title});\n    };\n\n    render() {\n        const { title } = this.state;\n        return (\n            <Page hideToolbarOnScroll pageContent={false}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"Маршал Сервис\" + (title !== '' ? (' / ' + title) : \"\")}\n                >\n                    <NavRight>\n                        <Offline>\n                            <Link iconMd=\"material:signal_wifi_off\" />\n                        </Offline>\n                    </NavRight>\n                </Navbar>\n                <Toolbar\n                    bottom\n                    tabbar\n                    labels\n                    color=\"main\"\n                >\n                    <Link tabLink=\"#requests\" onClick={() => this.chgTitle('Заявки')} tabLinkActive text=\"Заявки\" iconMd=\"material:important_devices\"/>\n                    <Link tabLink=\"#stores\" onClick={() => this.chgTitle('Магазины')} text=\"Магазины\" iconMd=\"material:store\"/>\n                    <Link tabLink=\"#new\" onClick={() => this.new_request(0)} text=\" \" >\n                        <Icon material=\"add\"/>\n                    </Link>\n                    <Link tabLink=\"#sto\" onClick={() => this.chgTitle('СТО')} text=\"Избранное\" iconMd=\"material:favorite\"/>\n                    <Link tabLink=\"#person\" onClick={() => this.chgTitle('Личный Кабинет')} text=\"Кабинет\" iconMd=\"material:person\"/>\n                </Toolbar>\n                <Fab\n                    href=\"open_request/0/\"\n                    position=\"center-bottom\"\n                    slot=\"fixed\"\n                    color=\"blue\"\n                    className={\"btn-new-request\"}\n                >\n                    <Icon ios=\"f7:add\" md=\"material:add\"/>\n                </Fab>\n\n                <Tabs animated>\n                    <Tab id=\"requests\" className=\"page-content\" tabActive>\n                        <RequestsPage/>\n                    </Tab>\n                    <Tab id=\"stores\" className=\"page-content\">\n                        <StoresPage/>\n                    </Tab>\n                    <Tab id=\"sto\" className=\"page-content\">\n                        <STOPage/>\n                    </Tab>\n                    <Tab id=\"person\" className=\"page-content\">\n                        <SettingsPage/>\n                    </Tab>\n                </Tabs>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n        handleShops: shops => dispatch(handleShops(shops)),\n        handleCategories: categories => dispatch(handleCategories(categories)),\n        handleRequests: requests => dispatch(handleRequests(requests)),\n        handleCars: cars => dispatch(handleCars(cars)),\n        handleCarBrands: brands => dispatch(handleCarBrands(brands)),\n        handleCarModels: models => dispatch(handleCarModels(models)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React, {Component} from 'react';\nimport {Page, Navbar, Block, Link} from 'framework7-react';\n\nexport default class RequestPage extends Component {\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"red\"\n                    title=\"Заявка\"\n                    backLink=\"Back\"\n                />\n                <Block strong>\n                    <ul>\n                        {Object.keys(this.$f7route.params).map(key => (\n                            <li key={key}><b>{key}:</b> {this.$f7route.params[key]}</li>\n                        ))}\n                    </ul>\n                </Block>\n                <Block strong>\n                    <Link onClick={() => this.$f7router.back()}>Назад</Link>\n                </Block>\n            </Page>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\nimport {handleAddCar, handleUpdateCar} from \"../../actions/DataActions\";\n\nclass NewCarPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            car_brand_id: 1,\n            car_model_id: 1,\n            car_id: 0,\n            vin: '',\n            years: [],\n            year: 2019,\n        }\n    }\n\n    handleBrand = (brand_id) => {\n        // find and set first available model\n        const models = this.props.models.filter(x => x.car_brand_id === Number(brand_id));\n        this.setState({ car_brand_id: Number(brand_id) }, () => {\n            this.modelSelectComponent.f7SmartSelect.setValue(models[0].id);\n            this.handleModel(models[0].id);\n        });\n    };\n    handleModel = (model_id) => {\n        this.setState({ car_model_id: Number(model_id) });\n    };\n    handleYear = (year) => {\n        this.setState({ year: Number(year) });\n    };\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendCar = (car_id) => {\n        // prepare payload\n        let req_data = {...this.state};\n        delete req_data.years;\n        delete req_data.car_id;\n        req_data[\"user_id\"] = this.props.user.id;\n\n        const set_data = new setData();\n\n        if (car_id > 0) {\n            set_data.dataPut('car-update/'+car_id, req_data).then(() => {\n                req_data[\"id\"] = car_id;\n                this.props.handleUpdateCar(req_data);\n                this.updCarSuccess.open();\n            });\n        }else {\n            set_data.data('car-add', req_data).then(data => {\n                this.props.handleAddCar(data.result);\n                this.addCarSuccess.open();\n            });\n        }\n\n        this.$f7.views.main.router.navigate('/cars/');\n    };\n\n\n    addCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль добавлен',\n        text: 'Теперь вы можете использовать его в запросах.',\n        closeTimeout: 3000,\n    });\n\n    updCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль отредактирован',\n        text: 'Теперь вы можете использовать новые данные.',\n        closeTimeout: 3000,\n    });\n\n    componentDidMount() {\n        let years = [];\n        for (let i = 2019; i > 1900; i--) {\n            years.push(i)\n        }\n        let year = years[0];\n\n        const initData = {years: years};\n        const car_id = Number(this.$f7route.params.carId);\n\n        if (car_id > 0) {\n            const car = this.props.cars.find(car => car.id === car_id);\n\n            // Set data to local state\n            initData.car_id = car.id;\n            initData.car_brand_id = car.car_brand_id;\n            initData.car_model_id = car.car_model_id;\n            initData.vin = car.vin;\n            initData.year = car.year;\n\n            this.setState(initData, () => {\n                // Set data to fields\n                this.brandSelectComponent.f7SmartSelect.setValue(car.car_brand_id);\n                this.modelSelectComponent.f7SmartSelect.setValue(car.car_model_id);\n                this.yearSelectComponent.f7SmartSelect.setValue(car.year);\n            });\n\n        } else{\n            this.setState(initData, () => {\n                this.yearSelectComponent.f7SmartSelect.setValue(year);\n            });\n        }\n    }\n\n    render() {\n        const {brands, models} = this.props;\n        const {car_id, car_brand_id, years, vin} = this.state;\n        const self = this;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={car_id > 0 ? \"Редактировать машину\" : \"Добавление машины\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете добавить ваш автомобиль(и) для более быстрого подбора услуг.</BlockTitle>\n                <List>\n                    <ListItem\n                        title=\"Марка автомобиля\"\n                        smartSelect\n                        ref={(el) => {this.brandSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти марку',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleBrand(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {brands.map(brand => (\n                                <option\n                                    key={'brand_' + brand.id}\n                                    value={brand.id}\n                                >{brand.car_brand}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Модель\"\n                        smartSelect\n                        ref={(el) => {this.modelSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти модель',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleModel(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {models.filter(x => x.car_brand_id === car_brand_id).map(model => (\n                                <option\n                                    key={'model_' + model.id}\n                                    value={model.id}\n                                >{model.car_model}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Год выпуска\"\n                        ref={(el) => {this.yearSelectComponent = el}}\n                        smartSelect\n                        smartSelectParams={{\n                            openIn: 'sheet',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleYear(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {years.map(year => (<option key={'year_' + year} value={year}>{year}</option>))}\n                        </select>\n                    </ListItem>\n                    <ListInput\n                        label=\"VIN\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Введите VIN номер автомобиля\"\n                        value={vin}\n                        onChange={(event) => this.handleData('vin', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendCar(car_id)}\n                    >{car_id > 0 ? 'Изменить' : 'Добавить'}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        brands: store.carbrands,\n        models: store.carmodels,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddCar: data => dispatch(handleAddCar(data)),\n        handleUpdateCar: data => dispatch(handleUpdateCar(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCarPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    Chip,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\nimport {\n    handleAddRequests,\n    handleUpdateRequest,\n   // handleDeleteRequest\n} from \"../../actions/DataActions\";\n\nclass NewRequestPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selected_shops: [],\n            shop_id: null,\n            category_id: 0,\n            car_id: 0,\n            vin: '',\n            text: '',\n        }\n    }\n\n    handleShops = (shops) => {\n        this.setState({ selected_shops: shops, shop_id: shops[0] });\n    };\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    handleCarData = (value) => {\n        const car_id = Number(value);\n        const vin = car_id > 0 ? this.props.cars.find(car => car.id === car_id).vin : '';\n        this.setState({car_id: car_id, vin: vin});\n    };\n\n    set_stores = () => {\n        const app = this.$f7;\n        app.views.main.router.navigate('/stores_list/', {\n            props: {\n                handleShops: this.handleShops,\n                selected_shops: this.state.selected_shops\n            }\n        });\n    };\n\n    sendRequest = (req_id) => {\n        let req_data = {...this.state};\n        delete req_data.selected_shops;\n        req_data[\"user_id\"] = this.props.user.id;\n        const set_data = new setData();\n        if (req_id > 0) {\n            set_data.dataPut('request-update/'+req_id, req_data).then(() => {\n                req_data[\"id\"] = req_id;\n                this.props.handleUpdateRequest(req_data);\n                this.updateRequestSuccess.open();\n            });\n        } else {\n            set_data.data('request-add', req_data).then(data => {\n                this.props.handleAddRequests(data.result);\n                this.addRequestSuccess.open();\n            });\n        }\n        this.$f7.views.main.router.navigate('/');\n    };\n\n    addRequestSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Заявка добавлена',\n        text: 'В ближайшее время вам ответят.',\n        closeTimeout: 3000,\n    });\n    updateRequestSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Заявка обновлена',\n        closeTimeout: 3000,\n    });\n\n    componentDidMount() {\n        const initData = {};\n        const req_id = Number(this.$f7route.params.reqId);\n\n        if (req_id > 0) {\n            const request = this.props.requests.find(request => request.id === req_id);\n            // Set data to local state\n            initData.category_id = request.category_id;\n            initData.car_id = request.car_id;\n            initData.vin = request.vin;\n            initData.text = request.text;\n            initData.shop_id = request.shop_id;\n            initData.selected_shops = [request.shop_id];\n            this.setState(initData);\n        }\n    }\n\n    render() {\n        const {selected_shops, category_id, car_id, vin, text} = this.state;\n        const {shops, categories, cars, brands, models} = this.props;\n        const selectedShops = shops.filter(x => selected_shops.indexOf(x.id) !== -1);\n        const req_id = this.$f7route.params.reqId;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={req_id > 0 ? \"Редактировать заявку\" : \"Новая заявка\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете оставить заявку на подбор необходимой вам запчасти или услуги.</BlockTitle>\n                <List>\n                    <ListInput\n                        label=\"Категория товара\"\n                        type=\"select\"\n                        placeholder=\"Выберите...\"\n                        value={category_id}\n                        onChange={(event) => this.handleData('category_id', event.target.value)}\n                    >\n                        <option key={0} value={null}>Выберите...</option>\n                        {\n                        categories.map((item) =>\n                            <option key={item.id} value={item.id}>{item.category}</option>\n                        )\n                    }\n                    </ListInput>\n                    <ListInput\n                        label=\"Автомобиль\"\n                        type=\"select\"\n                        placeholder=\"Выберите...\"\n                        value={car_id}\n                        onChange={(event) => this.handleCarData( event.target.value)}\n                    >\n                        <option key={0} value={null}>Выберите...</option>\n                        {\n                            cars.map(car => (\n                                <option\n                                    key={'car_'+car.id}\n                                    value={car.id}\n                                >{brands.find(brand => brand.id === car.car_brand_id).car_brand\n                                + ' ' + models.find(model => model.id === car.car_model_id).car_model}</option>\n                            ))\n                        }\n                    </ListInput>\n                    <ListInput\n                        outline\n                        label=\"VIN\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Для более быстрого поиска запчасти введите VIN номер автомобиля\"\n                        value={vin}\n                        onChange={(event) => this.handleData('vin', event.target.value)}\n                    />\n                    <ListInput\n                        outline\n                        label=\"Описание\"\n                        floatingLabel\n                        type=\"textarea\"\n                        placeholder=\"Дополнительная информация о требуемом товаре...\"\n                        value={text}\n                        onChange={(event) => this.handleData('text', event.target.value)}\n                    />\n\n                    <BlockTitle>Запрос в магазин:\n                        <Button\n                            small\n                            fill\n                            onClick={() => this.set_stores()}\n                            style={{float: 'right', display: 'inline-block'}}\n                        >Выбрать</Button>\n                    </BlockTitle>\n                    {\n                        selectedShops.length > 0 ?\n                            (\n                                <Block strong>\n                                    {\n                                        selectedShops.map((item, index) => {\n                                            return <Chip key={index} text={item.name}/>\n                                        })\n                                    }\n                                </Block>\n                            )\n                            : null\n                    }\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendRequest(req_id)}\n                    >{req_id > 0 ? 'Сохранить изменения' : 'Отправить заявку'}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n        requests: store.requests,\n        shops: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n//handleAddRequests\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddRequests: data => dispatch(handleAddRequests(data)),\n        handleUpdateRequest: data => dispatch(handleUpdateRequest(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewRequestPage)","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {handleResponse} from \"../../actions/DataActions\";\nimport {get} from \"idb-keyval\";\n\nimport {\n    Page,\n    Navbar,\n    List,\n    Icon,\n    ListItem,\n    Block,\n} from 'framework7-react';\n\nconst getResponse = async (props, resp_id) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }else{\n        await get('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }\n};\n\nclass ResponsesPage extends Component {\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n\n    open_response(resp_id) {\n        this.$f7.dialog.preloader('Загружаем предложение...');\n        getResponse(this.props, resp_id).then(() => {\n            this.$f7.views.main.router.navigate('/requests/response/' + resp_id + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    render() {\n        const {request} = this.props;\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложения\"\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        swipeout\n                        after={request.created_at.toLocaleString()}\n                        subtitle={\"Предложений: \" + (request.answers.length || 0) + \"\"}\n                        text={request.text}\n                    >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>\n                                    {this.get_category(request.category_id)}\n                                </span>\n                    </ListItem>\n                </List>\n\n                <List\n                    mediaList\n                    noHairlinesMd\n                    className={\"list-with-header\"}\n                >\n                    {/*\ncreated_at: \"2019-04-09 00:00:00\"\ndescription: \"We have something \"\nid: 1\nis_new: true\nprice: 200\nrequest_id: 1\nshop_id: 7\nstatus_id: 1\nupdated_at: \"2019-04-09 00:00:00\"\nupdated_by: 1\nuser_id: 1\n*/}\n                    {\n                        request.answers.length === 0\n                            ?\n                            <Block>На ваш запрос пока нет ответов...</Block>\n                            :\n                            request.answers.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    onClick={() => this.open_response(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    subtitle={this.get_shop(item.shop_id)}\n                                    text={item.description}\n                                >\n                                    <b slot=\"title\">\n                                        {\n                                            item.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                  color=\"green\"/> : null\n                                        }\n                                        {item.price}</b>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        request: store.request[0],\n        categories: store.stores.categories,\n        shops: store.stores.shops,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsesPage)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    Messages,\n    // MessagesTitle,\n    Messagebar,\n    Link,\n    Message,\n    /* MessagebarAttachment,\n     MessagebarAttachments,\n     MessagebarSheet,\n     MessagebarSheetImage,*/\n    Icon,\n    List,\n    ListItem,\n    Navbar,\n    // NavRight\n} from 'framework7-react';\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {setData} from \"../../axios/setData\";\nimport {get} from \"idb-keyval\";\nimport {handleResponse} from \"../../actions/DataActions\";\n\nconst _ = require('lodash/core');\n\nconst getMessages = async (props, answer_id, loading, sendingData) => {\n    if (!sendingData) {\n        let detect = new Detector();\n        loading.show('yellow');\n        if (await detect.state.online) {\n            let get_data = new getData();\n            await get_data.data('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        } else {\n            await get('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        }\n        setTimeout(() => {\n            loading.hide();\n        }, 500);\n    }\n};\n\nconst sendMessage = async (props, payload, notificationOffline, handleSendingData) => {\n    handleSendingData(true);\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let set_data = new setData();\n        await payload.forEach( async data => {\n            await set_data.data('message-add', data);\n        });\n    }else{\n        notificationOffline.open();\n    }\n    handleSendingData(false);\n};\n\nclass respMessages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messageValue: '',\n            attachments: [],\n            sheetVisible: false,\n            typingMessage: null,\n            messages: this.props.response.messages,\n            messagesData: [\n                {\n                    type: 'received',\n                    message: 'Здравствуйте! 👋<br/>Здесь вы можете уточнить детали заказа.',\n                    date: new Date(),\n                },\n            ],\n            images: [],\n            responseInProgress: false,\n            sendingData: false,\n        }\n    }\n\n    answer_id = this.props.response.id;\n    user = this.props.user;\n\n    notificationOffline = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка подключения',\n        text: 'Попробуйте повторить запрос позже.',\n        closeButton: true,\n    });\n\n    loading = this.$f7.progressbar;\n\n    render() {\n        const {response} = this.props;\n        return (\n            <Page className={\"messages-block\"}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложение\"\n                    backLink=\"Back\"\n                />\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        key={response.id}\n                        onClick={() => this.open_response(response.id)}\n                        after={response.created_at.toLocaleString()}\n                        subtitle={this.get_shop(response.shop_id)}\n                        text={response.description}\n                    >\n                        <b slot=\"title\">\n                            {\n                                response.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                        color=\"green\"/> : null\n                            }\n                            {response.price}</b>\n                    </ListItem>\n                </List>\n                <Messagebar\n                    placeholder={this.placeholder}\n                    ref={(el) => {this.messagebarComponent = el}}\n                    attachmentsVisible={this.attachmentsVisible}\n                    sheetVisible={this.state.sheetVisible}\n                    change={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    value={this.state.messageValue}\n                    //onChange={this.handleMessage.bind(this)}\n                    onInput={this.handleMessage.bind(this)}\n                >\n                    {/* <Link\n                        iconIos=\"f7:camera_fill\"\n                        iconMd=\"material:camera_alt\"\n                        slot=\"inner-start\"\n                        onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    />*/}\n                    <Link\n                        iconIos=\"f7:arrow_up_fill\"\n                        iconMd=\"material:send\"\n                        slot=\"inner-end\"\n                        onClick={this.sendMessage.bind(this)}\n                    />\n                    {/* <MessagebarAttachments>\n                        {this.state.attachments.map((image, index) => (\n                            <MessagebarAttachment\n                                key={index}\n                                image={image}\n                                onAttachmentDelete={() => this.deleteAttachment(image)}\n                            />\n                        ))}\n                    </MessagebarAttachments>\n                    <MessagebarSheet>\n                        {this.state.images.map((image, index) => (\n                            <MessagebarSheetImage\n                                key={index}\n                                image={image}\n                                checked={this.state.attachments.indexOf(image) >= 0}\n                                onChange={this.handleAttachment.bind(this)}\n                            />\n                        ))}\n                    </MessagebarSheet>*/}\n                </Messagebar>\n\n                <Messages\n                    className={\"list-with-header\"}\n                    ref={(el) => {this.messagesComponent = el}}\n                >\n                    {/*<MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>*/}\n\n                    {this.state.messagesData.map((message, index) => (\n                        <Message\n                            key={index}\n                            type={message.type}\n                            image={message.image}\n                            name={message.name}\n                            avatar={message.avatar}\n                            footer={message.date.toLocaleString()}\n                            first={this.isFirstMessage(message, index)}\n                            last={this.isLastMessage(message, index)}\n                            tail={this.isTailMessage(message, index)}\n                        >\n                            {message.message && (\n                                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.message}} />\n                            )}\n                        </Message>\n                    ))}\n                    {this.state.typingMessage && (\n                        <Message\n                            type=\"received\"\n                            typing={true}\n                            first={true}\n                            last={true}\n                            tail={true}\n                            header={`${this.state.typingMessage.name} is typing`}\n                            avatar={this.state.typingMessage.avatar}\n                        />\n                    )}\n                </Messages>\n            </Page>\n        )\n    }\n\n    get attachmentsVisible() {\n        const self = this;\n        return self.state.attachments.length > 0;\n    }\n    get placeholder() {\n        const self = this;\n        return self.state.attachments.length > 0 ? 'Добавьте сообщение или отправьте' : 'Сообщение';\n    }\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n    updateMessages() {\n        const self = this;\n        const messages = self.props.response.messages;\n        console.log('update', messages);\n        if (self.props.response.messages.length) {\n            const messagesData = messages.map((item) => {\n                return {\n                    name: item.user.name,\n                    type: item.user_id === 1 ? 'sent' : 'received',\n                    message: item.message,\n                    date: item.updated_at,\n                }\n            });\n            self.setState({messages: messages, messagesData: messagesData});\n        }\n    }\n\n    // Обновляем сообщения, только если что-то изменилось\n    componentDidUpdate() {\n        const oldData = this.state.messages;\n        const newData = this.props.response.messages;\n        if (!(_.isEqual(newData, oldData))) {\n            this.updateMessages();\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if (!(_.isEqual(nextProps.response.messages, prevState.messages))) {\n            return {response : nextProps.response};\n        }\n        else return null;\n    }\n\n    componentDidMount() {\n        const self = this;\n        this.updateMessages();\n        self.$f7ready(() => {\n            self.messagebar = self.messagebarComponent.f7Messagebar;\n            self.messages = self.messagesComponent.f7Messages;\n        });\n\n        this.intervalId = setInterval(()  =>\n            getMessages(self.props, self.answer_id, self.loading, self.state.sendingData),\n            5000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.intervalId);\n    }\n    isFirstMessage(message, index) {\n        const self = this;\n        const previousMessage = self.state.messagesData[index - 1];\n        if (message.isTitle) return false;\n        return !previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name;\n\n    }\n    isLastMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    isTailMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    deleteAttachment(image) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = attachments.indexOf(image);\n        attachments.splice(index, 1);\n        self.setState({ attachments });\n    }\n    handleAttachment(e) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = self.$$(e.target).parents('label.checkbox').index();\n        const image = self.state.images[index];\n        if (e.target.checked) {\n            // Add to attachments\n            attachments.unshift(image);\n        } else {\n            // Remove from attachments\n            attachments.splice(attachments.indexOf(image), 1);\n        }\n        self.setState({ attachments });\n    }\n\n    handleMessage() {\n        const self = this;\n        let text = self.messagebar.$textareaEl.val();\n        self.setState({messageValue: text});\n    }\n    sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();\n        const messagesToSend = [];\n        self.state.attachments.forEach((attachment) => {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: \"\",\n                attachment: attachment,\n                date: new Date(),\n            });\n        });\n        if (text.trim().length) {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: text,\n                attachment: \"\",\n                date: new Date(),\n            });\n        }\n        if (messagesToSend.length === 0) {\n            return;\n        }\n\n        self.setState({\n            messageValue: '',\n            // Reset attachments\n            attachments: [],\n            // Hide sheet\n            sheetVisible: false,\n            // Send message\n            messagesData: [...self.state.messagesData, ...messagesToSend],\n        });\n\n        sendMessage(this.props, messagesToSend, this.notificationOffline, this.handleSendingData).then(() => {\n            self.messagebar.clear();\n        });\n\n        // Focus area\n        if (text.length) self.messagebar.focus();\n        /*\n                // Mock response\n                if (self.state.responseInProgress) return;\n                self.setState({\n                    responseInProgress: true,\n                });\n                */\n    }\n\n    handleSendingData = (value) => {\n        this.setState({sendingData: value});\n    }\n}\n\n\n\nconst mapStateToProps = store => {\n    return {\n        response: store.response[0],\n        shops: store.stores.shops,\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(respMessages)","import React from 'react';\nimport {\n    Page,\n    Navbar,\n    Messages,\n    MessagesTitle,\n    Messagebar,\n    Link,\n    Message,\n    MessagebarAttachment,\n    MessagebarAttachments,\n    MessagebarSheet,\n    MessagebarSheetImage,\n} from 'framework7-react';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            attachments: [],\n            sheetVisible: false,\n            typingMessage: null,\n            messagesData: [\n                {\n                    type: 'sent',\n                    text: 'Hi, Kate',\n                },\n                {\n                    type: 'sent',\n                    text: 'How are you?',\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Hi, I am good!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    type: 'received',\n                    text: 'Hi there, I am also fine, thanks! And how are you?',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n                {\n                    type: 'sent',\n                    text: 'Hey, Blue Ninja! Glad to see you ;)',\n                },\n                {\n                    type: 'sent',\n                    text: 'Hey, look, cutest kitten ever!',\n                },\n                {\n                    type: 'sent',\n                    image: 'https://cdn.framework7.io/placeholder/cats-200x260-4.jpg',\n\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Nice!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Like it very much!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    type: 'received',\n                    text: 'Awesome!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n            ],\n            images: [\n                'https://cdn.framework7.io/placeholder/cats-300x300-1.jpg',\n                'https://cdn.framework7.io/placeholder/cats-200x300-2.jpg',\n                'https://cdn.framework7.io/placeholder/cats-400x300-3.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x150-4.jpg',\n                'https://cdn.framework7.io/placeholder/cats-150x300-5.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x300-6.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x300-7.jpg',\n                'https://cdn.framework7.io/placeholder/cats-200x300-8.jpg',\n                'https://cdn.framework7.io/placeholder/cats-400x300-9.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x150-10.jpg',\n            ],\n            people: [\n                {\n                    name: 'Kate Johnson',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n            ],\n            answers: [\n                'Yes!',\n                'No',\n                'Hm...',\n                'I am not sure',\n                'And what about you?',\n                'May be ;)',\n                'Lorem ipsum dolor sit amet, consectetur',\n                'What?',\n                'Are you sure?',\n                'Of course',\n                'Need to think about it',\n                'Amazing!!!',\n            ],\n            responseInProgress: false,\n        }\n    }\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    backLink=\"Back\"\n                    title=\"Переписка по заявке\"/>\n\n                <Messagebar\n                    placeholder={this.placeholder}\n                    ref={(el) => {this.messagebarComponent = el}}\n                    attachmentsVisible={this.attachmentsVisible}\n                    sheetVisible={this.state.sheetVisible}\n                    change={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                >\n                    <Link\n                        iconIos=\"f7:camera_fill\"\n                        iconMd=\"material:camera_alt\"\n                        slot=\"inner-start\"\n                        onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    />\n                    <Link\n                        iconIos=\"f7:arrow_up_fill\"\n                        iconMd=\"material:send\"\n                        slot=\"inner-end\"\n                        onClick={this.sendMessage.bind(this)}\n                    />\n                    <MessagebarAttachments>\n                        {this.state.attachments.map((image, index) => (\n                            <MessagebarAttachment\n                                key={index}\n                                image={image}\n                                onAttachmentDelete={() => this.deleteAttachment(image)}\n                            />\n                        ))}\n                    </MessagebarAttachments>\n                    <MessagebarSheet>\n                        {this.state.images.map((image, index) => (\n                            <MessagebarSheetImage\n                                key={index}\n                                image={image}\n                                checked={this.state.attachments.indexOf(image) >= 0}\n                                onChange={this.handleAttachment.bind(this)}\n                            />\n                        ))}\n                    </MessagebarSheet>\n                </Messagebar>\n\n                <Messages ref={(el) => {this.messagesComponent = el}}>\n                    <MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>\n\n                    {this.state.messagesData.map((message, index) => (\n                        <Message\n                            key={index}\n                            type={message.type}\n                            image={message.image}\n                            name={message.name}\n                            avatar={message.avatar}\n                            first={this.isFirstMessage(message, index)}\n                            last={this.isLastMessage(message, index)}\n                            tail={this.isTailMessage(message, index)}\n                        >\n                            {message.text && (\n                                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.text}} />\n                            )}\n                        </Message>\n                    ))}\n                    {this.state.typingMessage && (\n                        <Message\n                            type=\"received\"\n                            typing={true}\n                            first={true}\n                            last={true}\n                            tail={true}\n                            header={`${this.state.typingMessage.name} is typing`}\n                            avatar={this.state.typingMessage.avatar}\n                        />\n                    )}\n                </Messages>\n            </Page>\n        )\n    }\n\n    get attachmentsVisible() {\n        const self = this;\n        return self.state.attachments.length > 0;\n    }\n    get placeholder() {\n        const self = this;\n        return self.state.attachments.length > 0 ? 'Add comment or Send' : 'Message';\n    }\n    componentDidMount() {\n        const self = this;\n        self.$f7ready(() => {\n            self.messagebar = self.messagebarComponent.f7Messagebar;\n            self.messages = self.messagesComponent.f7Messages;\n        });\n    }\n    isFirstMessage(message, index) {\n        const self = this;\n        const previousMessage = self.state.messagesData[index - 1];\n        if (message.isTitle) return false;\n        if (!previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name) return true;\n        return false;\n    }\n    isLastMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;\n        return false;\n    }\n    isTailMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;\n        return false;\n    }\n    deleteAttachment(image) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = attachments.indexOf(image);\n        attachments.splice(index, 1);\n        self.setState({ attachments });\n    }\n    handleAttachment(e) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = self.$$(e.target).parents('label.checkbox').index();\n        const image = self.state.images[index];\n        if (e.target.checked) {\n            // Add to attachments\n            attachments.unshift(image);\n        } else {\n            // Remove from attachments\n            attachments.splice(attachments.indexOf(image), 1);\n        }\n        self.setState({ attachments });\n    }\n    sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();\n        const messagesToSend = [];\n        self.state.attachments.forEach((attachment) => {\n            messagesToSend.push({\n                image: attachment,\n            });\n        });\n        if (text.trim().length) {\n            messagesToSend.push({\n                text,\n            });\n        }\n        if (messagesToSend.length === 0) {\n            return;\n        }\n\n        self.setState({\n            // Reset attachments\n            attachments: [],\n            // Hide sheet\n            sheetVisible: false,\n            // Send message\n            messagesData: [...self.state.messagesData, ...messagesToSend],\n        });\n        self.messagebar.clear();\n\n        // Focus area\n        if (text.length) self.messagebar.focus();\n\n        // Mock response\n        if (self.state.responseInProgress) return;\n        self.setState({\n            responseInProgress: true,\n        });\n        setTimeout(() => {\n            const answer = self.state.answers[Math.floor(Math.random() * self.state.answers.length)];\n            const person = self.state.people[Math.floor(Math.random() * self.state.people.length)];\n            self.setState({\n                typingMessage: {\n                    name: person.name,\n                    avatar: person.avatar,\n                },\n            });\n            setTimeout(() => {\n                self.setState({\n                    messagesData: [...self.state.messagesData, {\n                        text: answer,\n                        type: 'received',\n                        name: person.name,\n                        avatar: person.avatar,\n                    }],\n                    typingMessage: null,\n                    responseInProgress: false,\n                });\n            }, 4000);\n        }, 1000);\n    }\n};","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    Navbar,\n    NavRight,\n    Link,\n    Page\n} from 'framework7-react';\nimport {setData} from \"../../axios/setData\";\nimport {handleDeleteCar} from \"../../actions/DataActions\";\n\n\n\nclass carsPage extends React.Component {\n\n    deleteCar = (car_id) => {\n        const set_data = new setData();\n        if (car_id > 0) {\n            set_data.dataDelete('car-detele/'+car_id).then(() => {\n               this.props.handleDeleteCar(car_id);\n            });\n        }\n    };\n\n    deleteHandle(car_id) {\n        const app = this.$f7;\n        app.dialog.confirm('Эта операция необратима', 'Удалить автомобиль?', () => this.deleteCar(car_id), () => {});\n    }\n    newCar() {\n        const carId = 0;\n        this.$f7.views.main.router.navigate('/open_car/' + carId + '/');\n    }\n    editHandle(carId) {\n        this.$f7.views.main.router.navigate('/open_car/' + carId + '/');\n    }\n\n    render() {\n        const {cars, brands, models} = this.props;\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Мои автомобили\"\n                    backLink=\"Back\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:add\" onClick={() => this.newCar()}/>\n                    </NavRight>\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        cars.map(car => (\n                            <ListItem\n                                key={'car_' + car.id}\n                                swipeout\n                                after={car.year}\n                                subtitle={\"VIN: \" + car.vin}\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"directions_car\" color=\"blue\"/>\n                                    {\n                                        ' ' + brands.find(brand => brand.id === car.car_brand_id).car_brand\n                                        + ' ' + models.find(model => model.id === car.car_model_id).car_model\n                                    }\n                                </span>\n                                <SwipeoutActions left>\n                                    <SwipeoutButton color=\"blue\" onClick={() => this.editHandle(car.id)}>\n                                        <Icon material=\"edit\"/> Изменить\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                                <SwipeoutActions right>\n                                    <SwipeoutButton color=\"#cb2128\" onClick={() => this.deleteHandle(car.id)}>\n                                        <Icon material=\"delete\"/> Удалить\n                                    </SwipeoutButton>\n                            </SwipeoutActions>\n                            </ListItem>\n                        ))\n                    }\n\n                </List>\n            </Page>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = store => {\n    return {\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDeleteCar: data => dispatch(handleDeleteCar(data)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(carsPage)","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n    Page,\n    Navbar,\n    List,\n    Subnavbar,\n    Searchbar,\n    Block,\n    ListItem,\n    Link,\n    NavRight\n} from 'framework7-react';\n\nclass ShopsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            vlData: {\n                items: [],\n            },\n            selectedShops: [],\n        };\n    }\n\n    searchAll = (query, items) => {\n        const found = [];\n        for (let i = 0; i < items.length; i += 1) {\n            if (items[i].name.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);\n        }\n        return found; // return array with mathced indexes\n    };\n\n    renderExternal(vl, vlData) {\n        this.setState({ vlData });\n    }\n\n    handleToggle = (item) => {\n        this.setState({selectedShops: [item.id]});\n        /*\n        let selectedShops = this.state.selectedShops;\n        item.checked = (item.hasOwnProperty('checked')) ? !item.checked : true;\n        if (item.checked) {\n            selectedShops.push(item.id);\n        } else {\n            selectedShops = selectedShops.filter(x => x !== item.id);\n        }\n        this.setState({selectedShops: selectedShops});\n        */\n    };\n\n    setShops = () => {\n        this.props.handleShops(this.state.selectedShops);\n        this.$f7router.back();\n    };\n\n    componentDidMount() {\n        const {shops, selected_shops} = this.props;\n        this.setState({selectedShops: [...selected_shops]});\n        shops.forEach((item) => {\n            item.checked = [...selected_shops].indexOf(item.id) !== -1;\n        })\n    }\n\n    render() {\n        const {shops} = this.props;\n        const {vlData, selectedShops} = this.state;\n        return (\n            <Page\n                className=\"stores-list\">\n                <Navbar title=\"Список магазинов\"\n                        backLink=\"Back\"\n                        bgColor=\"main\"\n                        textColor=\"white\"\n                        color=\"white\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:done\" onClick={() => this.setShops()}/>\n                    </NavRight>\n                    <Subnavbar inner={false} className={\"search-bar\"}>\n                        <Searchbar\n                            searchContainer=\".virtual-list\"\n                            searchItem=\"li\"\n                            searchIn=\".item-title\"\n                            placeholder=\"Поиск\"\n                        />\n                    </Subnavbar>\n                </Navbar>\n                <Block>\n                    <p>Здесь вы можете выбрать в какой магазин хотите отправить запрос</p>\n                </Block>\n                <List className=\"searchbar-not-found\">\n                    <ListItem title=\"Магазины не найдены...\"/>\n                </List>\n                <List\n                    className=\"searchbar-found\"\n                    medialList\n                    virtualList\n                    virtualListParams={\n                        {\n                            items: shops,\n                            searchAll: this.searchAll,\n                            renderExternal: this.renderExternal.bind(this),\n                            height: this.$theme.ios ? 63 : 73\n                        }\n                    }\n                >\n                    <ul>\n                        {vlData.items.map((item, index) => (\n                            <ListItem\n                                key={index}\n                                mediaItem\n                                radio\n                                checked={selectedShops.indexOf(item.id) !== -1 /*item.checked*/}\n                                onClick={() => this.handleToggle(item)}\n                                title={item.name}\n                                subtitle={item.address}\n                                after={item.phone}\n                                style={{top: `${vlData.topPosition}px`}}\n                            />\n                        ))}\n                    </ul>\n                </List>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        shops: store.stores.shops,\n    }\n};\n\nexport default connect(mapStateToProps)(ShopsList)","import { set, get } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class authorisation {\n\n    login = async (...args) => {\n        const url = '/login';\n        const payload = {\n            email: args[0],\n            password: args[1],\n            application: 'marshal'\n        };\n        let res = 'test';\n        await get('AUTH_TOKEN').then( async value => {\n            if (value === undefined) {\n                try {\n                    let response = await axios.post(url, payload);\n                    let AUTH_TOKEN = response.data.access_token;\n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n                    set('AUTH_TOKEN', AUTH_TOKEN).then();\n                    res = await this.user_details();\n\n                } catch (error) {\n                    res = error.response;\n                }\n            }else{\n                res = await this.user_details();\n                console.log(res);\n            }\n        });\n        return res;\n    };\n\n    user_details = async () => {\n        const url = '/details';\n        const payload = {};\n        try {\n            return await axios.get(url, payload);\n        } catch (error) {\n            return error.response;\n        }\n    }\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    List,\n    ListInput,\n    Button,\n    BlockFooter,\n    Link,\n    LoginScreenTitle\n} from 'framework7-react';\n\nimport { authorisation } from '../../axios/login'\nimport { handleLogin } from '../../actions/UserActions'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputLogin: '',\n            inputPassword: '',\n        };\n    }\n\n    authError = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка авторизации',\n        text: 'Проверьте имя пользователя и пароль.',\n        closeButton: true,\n    });\n\n    authSuccess = (name) => this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Добро пожаловать ' + name + '!',\n        closeTimeout: 3000,\n    });\n\n    handleOnChange = prop => event => {\n      this.setState({[prop]: event.target.value});\n    };\n\n    async authentication() {\n        const self = this;\n        self.$f7.dialog.preloader();\n\n        const auth = new authorisation();\n        const { inputLogin, inputPassword} = this.state;\n        const response = await auth.login(inputLogin, inputPassword);\n        if (response.status === 401) {\n            this.authError.open();\n        } else if (response.status === 200) {\n            this.authSuccess(response.data.success.name).open();\n            this.$f7.views.main.router.navigate('/');\n        }\n        self.$f7.dialog.close();\n        this.props.handleLogin(response.data.success);\n    }\n    render() {\n\n        const { inputLogin, inputPassword} = this.state;\n\n        return (\n            <Page loginScreen>\n                <LoginScreenTitle>Войти</LoginScreenTitle>\n                <List form>\n                    <ListInput\n                        label=\"Email\"\n                        name=\"username\"\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={inputLogin}\n                        onChange={this.handleOnChange('inputLogin')}\n                    />\n                    <ListInput\n                        label=\"Password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={inputPassword}\n                        onChange={this.handleOnChange('inputPassword')}\n                    />\n\n                    <BlockFooter>\n                        <Button fill onClick={()=>this.authentication()}>Войти</Button>\n                    </BlockFooter>\n                </List>\n\n                <List>\n                    <BlockFooter>\n                        <p><Link>Зарегистрироваться</Link></p>\n                        <p>Для восстановления пароля нажмите <Link>ссылку</Link></p>\n                    </BlockFooter>\n                </List>\n            </Page>\n        )\n    }\n}\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import HomePage from './components/pages/HomePage';\nimport AboutPage from './components/pages/AboutPage';\nimport FormPage from './components/pages/FormPage';\nimport DynamicRoutePage from './components/pages/DynamicRoutePage';\nimport NotFoundPage from './components/pages/NotFoundPage';\nimport PanelLeftPage from './components/pages/PanelLeftPage';\nimport PanelRightPage from './components/pages/PanelRightPage';\nimport NewCarPage from \"./components/pages/NewCarPage\";\nimport NewRequestPage from \"./components/pages/NewRequestPage\";\nimport ResponsesPage from \"./components/pages/ResponsesPage\";\nimport ResponsePage from \"./components/pages/ResponsePage\";\nimport ChatPage from \"./components/pages/ChatPage\";\nimport CarsPage from \"./components/pages/CarsPage\";\nimport StoresList from \"./components/pages/StoresList\";\nimport LoginPage from \"./components/pages/LoginPage\";\n\nexport default [\n    {\n        path: '/',\n        component: HomePage,\n    },\n    {\n        path: '/panel-left/',\n        component: PanelLeftPage,\n    },\n    {\n        path: '/panel-right/',\n        component: PanelRightPage,\n    },\n    {\n        path: '/about/',\n        component: AboutPage,\n    },\n    {\n        path: '/form/',\n        component: FormPage,\n    },\n    {\n        path: '/login/',\n        component: LoginPage,\n    },\n    {\n        path: '/messages/',\n        component: ChatPage,\n    },\n    {\n        path: '/cars/',\n        component: CarsPage,\n    },\n    {\n        path: '/dynamic-route/blog/:blogId/post/:postId/',\n        component: DynamicRoutePage,\n    },\n    {\n        path: '/open_request/:reqId/',\n        component: NewRequestPage,\n    },\n    {\n        path: '/open_car/:carId/',\n        component: NewCarPage,\n    },\n    {\n        path: '/requests/:reqId/',\n        component: ResponsesPage,\n    },\n    {\n        path: '/requests/response/:reqId/',\n        component: ResponsePage,\n    },\n    {\n        path: '/stores_list/',\n        component: StoresList,\n    },\n    {\n        path: '(.*)',\n        component: NotFoundPage,\n    },\n];\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Left Panel\" />\n    <Block strong>\n      <p>Left panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Right Panel\" />\n    <Block strong>\n      <p>Right panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"About\" backLink=\"Back\"></Navbar>\n    <BlockTitle>About My App</BlockTitle>\n    <Block strong>\n      <p>Here is About page!</p>\n      <p>You can go <Link back>back</Link>.</p>\n      <p>Mauris posuere sit amet metus id venenatis. Ut ante dolor, tempor nec commodo rutrum, varius at sem. Nullam ac nisi non neque ornare pretium. Nulla mauris mauris, consequat et elementum sit amet, egestas sed orci. In hac habitasse platea dictumst.</p>\n      <p>Fusce eros lectus, accumsan eget mi vel, iaculis tincidunt felis. Nulla tincidunt pharetra sagittis. Fusce in felis eros. Nulla sit amet aliquam lorem, et gravida ipsum. Mauris consectetur nisl non sollicitudin tristique. Praesent vitae metus ac quam rhoncus mattis vel et nisi. Aenean aliquet, felis quis dignissim iaculis, lectus quam tincidunt ligula, et venenatis turpis risus sed lorem. Morbi eu metus elit. Ut vel diam dolor.</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block\n} from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Form\" backLink=\"Back\" />\n    <BlockTitle>Form Example</BlockTitle>\n    <List form>\n      <ListInput\n        label=\"Name\"\n        type=\"text\"\n        placeholder=\"Name\"\n      />\n      <ListInput\n        label=\"E-mail\"\n        type=\"email\"\n        placeholder=\"E-mail\"\n      />\n      <ListInput\n        label=\"URL\"\n        type=\"url\"\n        placeholder=\"URL\"\n      />\n      <ListInput\n        label=\"Password\"\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <ListInput\n        label=\"Phone\"\n        type=\"tel\"\n        placeholder=\"Phone\"\n      />\n      <ListInput\n        label=\"Gender\"\n        type=\"select\"\n        defaultValue=\"Male\"\n      >\n        <option>Male</option>\n        <option>Female</option>\n      </ListInput>\n      <ListInput\n        label=\"Birth date\"\n        type=\"date\"\n        placeholder=\"Birth date\" value=\"2014-04-30\"\n      />\n      <ListItem title=\"Toggle\">\n        <Toggle slot=\"after\" />\n      </ListItem>\n      <ListInput\n        label=\"Slider\"\n        input={false}\n      >\n        <Range label={true} slot=\"input\" min={0} max={100} value={50} step={1} />\n      </ListInput>\n      <ListInput\n        label=\"Textarea\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n      />\n      <ListInput\n        label=\"Resizable\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n        resizable\n      />\n    </List>\n\n    <BlockTitle>Checkbox group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} checkbox name=\"my-checkbox\" value={n + 1} title={`Checkbox ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Radio buttons group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} radio name=\"my-radio\" defaultChecked={n === 0} value={n + 1} title={`Radio ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Buttons</BlockTitle>\n    <Block strong>\n      <Row tag=\"p\">\n        <Button className=\"col\">Button</Button>\n        <Button className=\"col\" fill>Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" raised>Raised</Button>\n        <Button className=\"col\" raised fill>Raised Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" round>Round</Button>\n        <Button className=\"col\" round fill>Round Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" outline>Outline</Button>\n        <Button className=\"col\" round outline>Outline Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small outline>Small</Button>\n        <Button className=\"col\" small round outline>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small fill>Small</Button>\n        <Button className=\"col\" small round fill>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large raised>Large</Button>\n        <Button className=\"col\" large fill raised>Large Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large fill raised color=\"red\">Large Red</Button>\n        <Button className=\"col\" large fill raised color=\"green\">Large Green</Button>\n      </Row>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar\n        title=\"Ошибка\"\n        backLink=\"Back\"\n        color=\"white\"\n        textColor=\"white\"\n        bgColor=\"main\"\n    />\n    <Block strong>\n      <p>Как вы сюда попали?..</p>\n      <p>Страница не найдена.</p>\n    </Block>\n  </Page>\n);\n","// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport './css/app.css';\nimport 'framework7/css/framework7.bundle.css';\nimport './css/icons.css';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n\n","import React from 'react';\n\nimport {Provider} from 'react-redux';\nimport {store} from '../store/configureStore';\n\nimport {\n    App,\n    Panel,\n    View,\n    Statusbar,\n    Popup,\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Block,\n} from 'framework7-react';\n\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n    const params = {\n        themeDark: false,\n        mainColor: 'red'\n    };\n\n    // Framework7 parameters here\n    const f7params = {\n        id: 'ru.bhapp.marshal', // App bundle ID\n        name: 'marshal', // App name\n        theme: 'md', // Automatic theme detection\n        // App routes\n        routes,\n    };\n\n    return (\n        <Provider store={store}>\n            <App params={f7params} themeDark={params.themeDark} color={params.mainColor}>\n                {/* Statusbar */}\n                <Statusbar/>\n\n                {/* Left Panel */}\n                <Panel left cover themeDark>\n                    <View url=\"/panel-left/\"/>\n                </Panel>\n\n                {/* Right Panel */}\n                <Panel right reveal themeDark>\n                    <View url=\"/panel-right/\"/>\n                </Panel>\n\n                {/* Main View */}\n                <View id=\"main-view\" url=\"/\" main className=\"safe-areas\"/>\n\n                {/* Popup */}\n                <Popup id=\"popup\">\n                    <View>\n                        <Page>\n                            <Navbar title=\"Popup\">\n                                <NavRight>\n                                    <Link popupClose>Close</Link>\n                                </NavRight>\n                            </Navbar>\n                            <Block>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque, architecto.\n                                Cupiditate laudantium rem nesciunt numquam, ipsam. Voluptates omnis, a inventore atque\n                                ratione aliquam. Omnis iusto nemo quos ullam obcaecati, quod.</Block>\n                        </Page>\n                    </View>\n                </Popup>\n\n            </App>\n        </Provider>\n    );\n};\n"],"sourceRoot":""}