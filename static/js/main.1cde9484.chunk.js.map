{"version":3,"sources":["actions/UserActions.js","reducers/user.js","actions/DataActions.js","reducers/stores.js","reducers/requests.js","reducers/request.js","reducers/cars.js","reducers/carmodels.js","reducers/carbrands.js","reducers/response.js","reducers/sto.js","reducers/index.js","store/configureStore.js","axios/init.js","axios/getData.js","components/pages/RequestsPage.jsx","components/pages/StoresPage.jsx","components/pages/SettingsPage.jsx","components/pages/STOPage.jsx","components/pages/HomePage.jsx","components/pages/DynamicRoutePage.jsx","axios/setData.js","components/pages/NewCarPage.jsx","components/pages/NewRequestPage.jsx","components/pages/ResponsesPage.jsx","components/pages/ResponsePage.jsx","components/pages/ChatPage.jsx","components/pages/CarsPage.jsx","components/pages/StoresList.jsx","axios/login.js","components/pages/LoginPage.jsx","routes.js","components/pages/PanelLeftPage.jsx","components/pages/PanelRightPage.jsx","components/pages/AboutPage.jsx","components/pages/FormPage.jsx","components/pages/NotFoundPage.jsx","index.js","components/App.jsx"],"names":["LOGIN_SUCCESS","handleLogin","callback","dispatch","type","payload","initialState","id","name","email","role_id","shop_id","SHOPS_REQUEST","CATEGORIES_REQUEST","REQUESTS","REQUEST","ADD_REQUESTS","RESPONSE","CARS","ADD_CAR","UPDATE_CAR","DELETE_CAR","CAR_BRANDS","CAR_MODELS","handleResponse","shops","description","address","phone","comment","categories","updated_at","Date","category","newState","carIndex","rootReducer","combineReducers","user","state","arguments","length","undefined","action","set","then","Object","objectSpread","stores","sto","requests","toConsumableArray","push","request","response","cars","edited_car","findIndex","car","car_id","console","log","splice","carbrands","carmodels","store","createStore","applyMiddleware","thunk","logger","axios","require","defaults","baseURL","headers","post","get","AUTH_TOKEN","common","getData","classCallCheck","this","data","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","res","wrap","_context","prev","next","sent","status","abrupt","t0","stop","_x","apply","getRequest","props","reqId","detect","get_data","Detector","online","value","handleRequest","_x2","RequestsPage","_this","possibleConstructorReturn","getPrototypeOf","call","$f7","views","main","router","navigate","_this2","dialog","preloader","close","alert","cat_id","cat","find","x","_this3","react_default","createElement","Fragment","framework7_react_esm","style","whiteSpace","mediaList","className","map","item","key","swipeout","onClick","open_request","after","created_at","toLocaleString","subtitle","answers_count","text","slot","material","answers","color","get_category","category_id","left","edit_request","right","reply","bind","confirmText","React","Component","connect","StoresPage","_this$props","accordionList","sort","b","index","accordionItem","title","filter","y","forward","SettingsPage","button","link","STOPage","initApplication","init","handleShops","handleCategories","handleRequests","handleCars","handleCarBrands","handleCarModels","HomePage","chgTitle","setState","initApp","hideToolbarOnScroll","pageContent","textColor","bgColor","dist","iconMd","bottom","tabbar","labels","tabLink","tabLinkActive","new_request","href","position","ios","md","animated","tabActive","pages_RequestsPage","pages_StoresPage","pages_STOPage","pages_SettingsPage","brands","models","RequestPage","backLink","strong","keys","$f7route","params","$f7router","back","setData","dataPut","_ref2","_callee2","_context2","put","_x3","_x4","dataDelete","_ref3","_callee3","_context3","delete","_x5","NewCarPage","handleBrand","brand_id","car_brand_id","Number","modelSelectComponent","f7SmartSelect","setValue","handleModel","model_id","car_model_id","handleYear","year","handleData","defineProperty","sendCar","req_data","years","set_data","handleUpdateCar","updCarSuccess","open","handleAddCar","result","addCarSuccess","notification","create","icon","closeTimeout","vin","i","initData","carId","brandSelectComponent","yearSelectComponent","_this$state","self","smartSelect","ref","el","smartSelectParams","openIn","searchbar","searchbarPlaceholder","closeOnSelect","on","closed","getValue","brand","car_brand","model","car_model","label","floatingLabel","placeholder","onChange","event","target","fill","NewRequestPage","selected_shops","handleCarData","set_stores","sendRequest","handleAddRequests","addRequestSuccess","selectedShops","indexOf","outline","small","float","display","getResponse","resp_id","ResponsesPage","shop","noHairlinesMd","open_response","get_shop","is_new","price","_","getMessages","answer_id","loading","sendingData","show","setTimeout","hide","sendMessage","notificationOffline","handleSendingData","forEach","_x9","_x6","_x7","_x8","respMessages","closeButton","progressbar","messageValue","attachments","sheetVisible","typingMessage","messages","messagesData","message","date","images","responseInProgress","messagebarComponent","attachmentsVisible","change","onInput","handleMessage","iconIos","messagesComponent","image","avatar","footer","first","isFirstMessage","last","isLastMessage","tail","isTailMessage","dangerouslySetInnerHTML","__html","typing","header","concat","user_id","oldData","newData","isEqual","updateMessages","$f7ready","messagebar","f7Messagebar","f7Messages","intervalId","setInterval","clearInterval","previousMessage","isTitle","nextMessage","e","$$","parents","checked","unshift","$textareaEl","val","replace","trim","messagesToSend","attachment","clear","focus","nextProps","prevState","_default","people","onAttachmentDelete","deleteAttachment","handleAttachment","answer","Math","floor","random","person","carsPage","deleteCar","handleDeleteCar","confirm","newCar","editHandle","deleteHandle","ShopsList","searchAll","query","items","found","toLowerCase","handleToggle","setShops","vlData","vl","inner","searchContainer","searchItem","searchIn","medialList","virtualList","virtualListParams","renderExternal","height","$theme","mediaItem","radio","top","topPosition","authorisation","login","_args2","password","application","access_token","user_details","LoginPage","authError","authSuccess","handleOnChange","prop","inputLogin","inputPassword","auth","success","_this$state2","loginScreen","form","authentication","routes","path","component","view","panelClose","defaultValue","input","min","max","step","resizable","Array","from","n","checkbox","defaultChecked","tag","raised","round","large","ChatPage","CarsPage","DynamicRoutePage","ResponsePage","StoresList","Framework7","use","Framework7React","ReactDOM","render","f7params","theme","es","themeDark","cover","reveal","popupClose","document","getElementById"],"mappings":"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","file":"static/js/main.1cde9484.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport function handleLogin(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: callback,\n        })\n    }\n}","import {\n    LOGIN_SUCCESS,\n} from '../actions/UserActions'\n\nimport { set } from 'idb-keyval';\n\nconst initialState = {\n    id: 0,\n    name: '',\n    email: '',\n    role_id: 0,\n    shop_id: null,\n};\n\nexport function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            set('user', action.payload).then();\n            return { ...action.payload };\n        default:\n            return state\n    }\n}","export const SHOPS_REQUEST = 'SHOPS_REQUEST';\nexport const CATEGORIES_REQUEST = 'CATEGORIES_REQUEST';\nexport const REQUESTS = 'REQUESTS';\nexport const REQUEST = 'REQUEST';\nexport const ADD_REQUESTS = 'ADD_REQUESTS';\nexport const RESPONSE = 'RESPONSE';\nexport const CARS = 'CARS';\nexport const ADD_CAR = 'ADD_CAR';\nexport const UPDATE_CAR = 'UPDATE_CAR';\nexport const DELETE_CAR = 'DELETE_CAR';\nexport const CAR_BRANDS = 'CAR_BRANDS';\nexport const CAR_MODELS = 'CAR_MODELS';\n\nexport function handleShops(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_REQUEST,\n            payload: callback,\n        })\n    }\n}\nexport function handleCategories(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CATEGORIES_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUESTS,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleResponse(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: RESPONSE,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_REQUESTS,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleUpdateCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: UPDATE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleDeleteCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: DELETE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleCars(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CARS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarBrands(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_BRANDS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarModels(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_MODELS,\n            payload: payload,\n        })\n    }\n}","import {\n    SHOPS_REQUEST,\n    CATEGORIES_REQUEST,\n} from '../actions/DataActions'\n\nconst initialState = {\n    shops: [\n        {\n            id: 1,\n            name: 'Title',\n            description: 'Description',\n            address: 'address',\n            phone: 'phone',\n            comment: 'comment',\n            categories: [],\n            updated_at: new Date()\n        }],\n    categories: [\n        {\n            id: 1,\n            category: 'Title',\n        }],\n    };\n\nexport function storesReducer(state = initialState, action) {\n    switch (action.type) {\n        case SHOPS_REQUEST:\n            return {...state, shops: action.payload};\n        case CATEGORIES_REQUEST:\n            return {...state, categories: action.payload};\n\n        default:\n            return state\n    }\n}","import {REQUESTS, ADD_REQUESTS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function requestsReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUESTS:\n            return action.payload;\n        case ADD_REQUESTS:\n            let newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        default:\n            return state\n    }\n}","import {REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function requestReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUEST:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {ADD_CAR, CARS, UPDATE_CAR, DELETE_CAR} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet carIndex = 0;\n\nexport function carsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CARS:\n            return action.payload;\n        case ADD_CAR:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_CAR:\n            const edited_car = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === edited_car.id));\n            newState[carIndex] = edited_car;\n            return newState;\n        case DELETE_CAR:\n            const car_id = action.payload;\n            console.log('delete', car_id);\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === car_id));\n            newState.splice(carIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {CAR_MODELS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carModelsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_MODELS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {CAR_BRANDS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carBrandsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_BRANDS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {RESPONSE} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function responseReducer(state = initialState, action) {\n    switch (action.type) {\n        case RESPONSE:\n            return action.payload;\n        default:\n            return state\n    }\n}","const initialState = [\n    {\n        id: 1,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 2,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 3,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n];\n\nexport function stoReducer(state = initialState, action) {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport { userReducer } from './user'\nimport { storesReducer } from './stores'\nimport { requestsReducer } from './requests'\nimport { requestReducer } from './request'\nimport { carsReducer } from './cars'\nimport { carModelsReducer } from './carmodels'\nimport { carBrandsReducer } from './carbrands'\nimport { responseReducer } from './response'\nimport { stoReducer } from './sto'\n\nexport const rootReducer = combineReducers({\n    user: userReducer,\n    stores: storesReducer,\n    sto: stoReducer,\n    requests: requestsReducer,\n    request: requestReducer,\n    response: responseReducer,\n    cars: carsReducer,\n    carbrands: carBrandsReducer,\n    carmodels: carModelsReducer,\n});","import { createStore, applyMiddleware } from 'redux'\nimport { rootReducer } from '../reducers'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));","import { get } from 'idb-keyval';\nexport const axios = require('axios');\n\naxios.defaults.baseURL = 'https://marshal.bh-app.ru/api';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nget('AUTH_TOKEN').then(AUTH_TOKEN => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n});\n\n\n","import { set } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class getData {\n    data = async (type) => {\n        const url = '/' + type;\n        const payload = {};\n        try {\n            let res =  await axios.get(url, payload);\n            if (res.status === 200) {\n                set(type, res.data).then();\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {handleRequest} from \"../../actions/DataActions\";\nimport {getData} from \"../../axios/getData\";\nimport {Detector} from \"react-detect-offline\";\nimport {get} from \"idb-keyval\";\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    Block,\n    BlockTitle\n} from 'framework7-react';\n\nconst getRequest = async (props, reqId) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }else{\n        await get('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }\n};\n\nclass RequestsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    edit_request(reqId) {\n        const app = this.$f7;\n        app.views.main.router.navigate('open_request/' + reqId + '/');\n    }\n\n    open_request(reqId) {\n        this.$f7.dialog.preloader('Получаем предложения...');\n        getRequest(this.props, reqId).then(() => {\n            this.$f7.views.main.router.navigate('requests/' + reqId + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    reply() {\n        const app = this.$f7;\n        app.dialog.alert('Reply');\n    }\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    render() {\n        const {requests} = this.props;\n        return (\n            <React.Fragment>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете подать заявку на подбор необходимого вам автотовара или запчасти.</BlockTitle>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        requests.length === 0\n                            ?\n                            <Block>Вы пока не создавали запросов... Настало время?</Block>\n                            :\n                            requests.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    swipeout\n                                    onClick={() => this.open_request(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    subtitle={\"Предложений: \" + (item.answers_count) + \"\"}\n                                    text={item.text}\n                                >\n                                <span slot=\"title\">\n                                    <Icon\n                                        className={\"status-icon\"}\n                                        material={item.answers > 0 ? 'check_circle_outline' : 'access_time'}\n                                        color=\"blue\"\n                                    />\n                                    {this.get_category(item.category_id)}\n                                </span>\n                                    <SwipeoutActions left>\n                                        <SwipeoutButton color=\"blue\" onClick={() => this.edit_request(item.id)}>\n                                            <Icon material=\"edit\"/> Редактировать\n                                        </SwipeoutButton>\n                                    </SwipeoutActions>\n                                    <SwipeoutActions right>\n                                        <SwipeoutButton\n                                            color=\"orange\"\n                                            onClick={this.reply.bind(this)}\n                                            confirmText=\"Подтвердите отмену вашей заявки\"\n                                        >\n                                            <Icon material=\"delete\"/> Отменить заявку\n                                        </SwipeoutButton>\n                                    </SwipeoutActions>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        requests: store.requests,\n        categories: store.stores.categories,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleRequest: request => dispatch(handleRequest(request)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestsPage)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    AccordionContent,\n    BlockTitle,\n} from 'framework7-react';\n\nclass StoresPage extends React.Component {\n\n    forward() {\n        const app = this.$f7;\n        app.dialog.alert('Магазин добавлен в избранные', 'Избранное');\n    }\n\n    render() {\n        const {stores, categories} = this.props;\n        return (\n            <React.Fragment>\n                <BlockTitle>Выберите интересующую вас категорию автотоваров:</BlockTitle>\n                <List accordionList>\n                    {\n                        categories.sort((a, b) => {\n                            return a.category < b.category ? -1 : 1\n                        })\n                            .map((cat, index) =>\n                            <ListItem\n                                key={index}\n                                accordionItem\n                                title={cat.category}>\n                                <AccordionContent>\n                                    <List\n                                        mediaList\n                                        className={\"no-margin\"}\n                                    >\n                                        {\n                                            stores.filter(x => x.categories.find(y => y.id === cat.id)).map(item =>\n                                                <ListItem\n                                                    key={item.id}\n                                                    swipeout\n                                                    after={item.phone}\n                                                    subtitle={item.description}\n                                                    text={item.address}\n                                                >\n                                                    <span slot=\"title\">\n                                                        <Icon className={\"status-icon\"} material=\"store\"\n                                                              color=\"green\"/> {item.name}\n                                                    </span>\n                                                    <SwipeoutActions left>\n                                                        <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>\n                                                            <Icon material=\"favorite\"/> В избранное\n                                                        </SwipeoutButton>\n                                                    </SwipeoutActions>\n                                                </ListItem>\n                                            )\n                                        }\n                                    </List>\n                                </AccordionContent>\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        stores: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n\nexport default connect(mapStateToProps)(StoresPage)\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    List,\n    ListItem,\n    Icon,\n} from 'framework7-react';\n\nclass SettingsPage extends React.Component {\n\n    forward() {\n        const app = this.$f7;\n        app.dialog.alert('Favorite');\n    }\n\n    render() {\n        const {user} = this.props;\n        return (\n            <div>\n                <h1>Личный кабинет</h1>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {(user.id > 0)\n                        ?\n                        <ListItem\n                            subtitle={user.email}\n                        >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> {user.name}\n                        </span>\n                        </ListItem>\n                        :\n                        <ListItem\n                            button\n                            link=\"login/\"\n                            subtitle=\"После регистрации станут доступны дополнительные возможности\"\n                        >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> Вход\n                        </span>\n                        </ListItem>\n                    }\n\n\n                    <ListItem\n                        button\n                        link=\"/cars/\"\n                        subtitle=\"Для быстрого поиска\"\n                    >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"directions_car\" color=\"main\"/> Мои автомобили\n                        </span>\n                    </ListItem>\n                </List>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nexport default connect(mapStateToProps)(SettingsPage)","import React from 'react';\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n} from 'framework7-react';\nimport {connect} from \"react-redux\";\n\nclass STOPage extends React.Component {\n\n    forward() {\n        const app = this.$f7;\n        app.dialog.alert('СТО добавлено в избранные', 'Избранное');\n    }\n\n    render() {\n        const {sto} = this.props;\n        return (\n            <div>\n                <h1>СТО</h1>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        sto.map(item =>\n                            <ListItem\n                                key={item.id}\n                                swipeout\n                                after={item.updated_at.toLocaleString()}\n                                subtitle={item.description}\n                                text={item.address}\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"build\" color=\"purple\"/> {item.name}\n                                </span>\n                                <SwipeoutActions left>\n                                    <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>\n                                        <Icon material=\"favorite\"/> В избранное\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = store => {\n    return {\n        sto: store.sto,\n    }\n}\n\nexport default connect(mapStateToProps)(STOPage)","import React from 'react';\nimport { get } from 'idb-keyval';\nimport {connect} from \"react-redux\";\nimport { Offline, Detector } from \"react-detect-offline\";\n\nimport {\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Toolbar,\n    Tabs,\n    Tab,\n    Icon,\n    Fab\n} from 'framework7-react';\n\nimport RequestsPage from './RequestsPage';\nimport StoresPage from './StoresPage';\nimport SettingsPage from './SettingsPage';\nimport STOPage from './STOPage';\n\nimport {getData} from '../../axios/getData'\nimport {handleLogin} from \"../../actions/UserActions\";\nimport {\n    handleCategories,\n    handleShops,\n    handleRequests,\n    handleCars,\n    handleCarBrands,\n    handleCarModels,\n} from \"../../actions/DataActions\";\n\n// Load data from indexedDB to Store\nclass initApplication {\n    init = async (props) => {\n        await get('user').then(value => value !== undefined && props.handleLogin(value));\n\n        // from internet\n        let detect = new Detector();\n        if (detect.state.online) {\n            let get_data = new getData();\n            await get_data.data('shops').then(value => value !== undefined && props.handleShops(value));\n            await get_data.data('categories').then(value => value !== undefined && props.handleCategories(value));\n            await get_data.data('userRequests').then(value => value !== undefined && props.handleRequests(value));\n            await get_data.data('cars').then(value => value !== undefined && props.handleCars(value));\n            await get_data.data('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n            await get_data.data('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n        } else {\n            // from idb\n            await get('shops').then(value => value !== undefined && props.handleShops(value));\n            await get('categories').then(value => value !== undefined && props.handleCategories(value));\n            await get('userRequests').then(value => value !== undefined && props.handleRequests(value));\n            await get('cars').then(value => value !== undefined && props.handleCars(value));\n            await get('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n            await get('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n        }\n    }\n}\n\n\nclass HomePage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"Заявки\",\n        }\n    }\n\n    async componentDidMount() {\n        this.$f7.dialog.preloader('Загрузка...');\n        const initApp = new initApplication();\n        await initApp.init(this.props);\n        this.$f7.dialog.close();\n    }\n\n    new_request(reqId) {\n        const app = this.$f7;\n        app.views.main.router.navigate('/open_request/' + reqId + '/');\n        return false;\n    }\n\n    chgTitle = (title) => {\n        this.setState({title: title});\n    };\n\n    render() {\n        const { title } = this.state;\n        return (\n            <Page hideToolbarOnScroll pageContent={false}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"Маршал Сервис\" + (title !== '' ? (' / ' + title) : \"\")}\n                >\n                    <NavRight>\n                        <Offline>\n                            <Link iconMd=\"material:signal_wifi_off\" />\n                        </Offline>\n                    </NavRight>\n                </Navbar>\n                <Toolbar\n                    bottom\n                    tabbar\n                    labels\n                    color=\"main\"\n                >\n                    <Link tabLink=\"#requests\" onClick={() => this.chgTitle('Заявки')} tabLinkActive text=\"Заявки\" iconMd=\"material:important_devices\"/>\n                    <Link tabLink=\"#stores\" onClick={() => this.chgTitle('Магазины')} text=\"Магазины\" iconMd=\"material:store\"/>\n                    <Link tabLink=\"#new\" onClick={() => this.new_request(0)} text=\" \" >\n                        <Icon material=\"add\"/>\n                    </Link>\n                    <Link tabLink=\"#sto\" onClick={() => this.chgTitle('СТО')} text=\"СТО\" iconMd=\"material:build\"/>\n                    <Link tabLink=\"#person\" onClick={() => this.chgTitle('Личный Кабинет')} text=\"Кабинет\" iconMd=\"material:person\"/>\n                </Toolbar>\n                <Fab\n                    href=\"open_request/0/\"\n                    position=\"center-bottom\"\n                    slot=\"fixed\"\n                    color=\"blue\"\n                    className={\"btn-new-request\"}\n                >\n                    <Icon ios=\"f7:add\" md=\"material:add\"/>\n                </Fab>\n\n                <Tabs animated>\n                    <Tab id=\"requests\" className=\"page-content\" tabActive>\n                        <RequestsPage/>\n                    </Tab>\n                    <Tab id=\"stores\" className=\"page-content\">\n                        <StoresPage/>\n                    </Tab>\n                    <Tab id=\"sto\" className=\"page-content\">\n                        <STOPage/>\n                    </Tab>\n                    <Tab id=\"person\" className=\"page-content\">\n                        <SettingsPage/>\n                    </Tab>\n                </Tabs>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n        handleShops: shops => dispatch(handleShops(shops)),\n        handleCategories: categories => dispatch(handleCategories(categories)),\n        handleRequests: requests => dispatch(handleRequests(requests)),\n        handleCars: cars => dispatch(handleCars(cars)),\n        handleCarBrands: brands => dispatch(handleCarBrands(brands)),\n        handleCarModels: models => dispatch(handleCarModels(models)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React, {Component} from 'react';\nimport {Page, Navbar, Block, Link} from 'framework7-react';\n\nexport default class RequestPage extends Component {\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"red\"\n                    title=\"Заявка\"\n                    backLink=\"Back\"\n                />\n                <Block strong>\n                    <ul>\n                        {Object.keys(this.$f7route.params).map(key => (\n                            <li key={key}><b>{key}:</b> {this.$f7route.params[key]}</li>\n                        ))}\n                    </ul>\n                </Block>\n                <Block strong>\n                    <Link onClick={() => this.$f7router.back()}>Назад</Link>\n                </Block>\n            </Page>\n        );\n    }\n}","import {axios} from './init'\n\n\nexport class setData {\n    data = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.post(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataPut = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.put(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataDelete = async (type) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.delete(url);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\nimport {handleAddCar, handleUpdateCar} from \"../../actions/DataActions\";\n\nclass NewCarPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            car_brand_id: 1,\n            car_model_id: 1,\n            car_id: 0,\n            vin: '',\n            years: [],\n            year: 2019,\n        }\n    }\n\n    handleBrand = (brand_id) => {\n        // find and set first available model\n        const models = this.props.models.filter(x => x.car_brand_id === Number(brand_id));\n        this.setState({ car_brand_id: Number(brand_id) }, () => {\n            this.modelSelectComponent.f7SmartSelect.setValue(models[0].id);\n            this.handleModel(models[0].id);\n        });\n    };\n    handleModel = (model_id) => {\n        this.setState({ car_model_id: Number(model_id) });\n    };\n    handleYear = (year) => {\n        this.setState({ year: Number(year) });\n    };\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendCar = (car_id) => {\n        // prepare payload\n        let req_data = {...this.state};\n        delete req_data.years;\n        delete req_data.car_id;\n        req_data[\"user_id\"] = this.props.user.id;\n\n        const set_data = new setData();\n\n        if (car_id > 0) {\n            set_data.dataPut('car-update/'+car_id, req_data).then(() => {\n                req_data[\"id\"] = car_id;\n                this.props.handleUpdateCar(req_data);\n                this.updCarSuccess.open();\n            });\n        }else {\n            set_data.data('car-add', req_data).then(data => {\n                this.props.handleAddCar(data.result);\n                this.addCarSuccess.open();\n            });\n        }\n\n        this.$f7.views.main.router.navigate('/cars/');\n    };\n\n\n    addCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль добавлен',\n        text: 'Теперь вы можете использовать его в запросах.',\n        closeTimeout: 3000,\n    });\n\n    updCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль отредактирован',\n        text: 'Теперь вы можете использовать новые данные.',\n        closeTimeout: 3000,\n    });\n\n    componentDidMount() {\n        let years = [];\n        for (let i = 2019; i > 1900; i--) {\n            years.push(i)\n        }\n        let year = years[0];\n\n        const initData = {years: years};\n        const car_id = Number(this.$f7route.params.carId);\n\n        if (car_id > 0) {\n            const car = this.props.cars.find(car => car.id === car_id);\n\n            // Set data to local state\n            initData.car_id = car.id;\n            initData.car_brand_id = car.car_brand_id;\n            initData.car_model_id = car.car_model_id;\n            initData.vin = car.vin;\n            initData.year = car.year;\n\n            this.setState(initData, () => {\n                // Set data to fields\n                this.brandSelectComponent.f7SmartSelect.setValue(car.car_brand_id);\n                this.modelSelectComponent.f7SmartSelect.setValue(car.car_model_id);\n                this.yearSelectComponent.f7SmartSelect.setValue(car.year);\n            });\n\n        } else{\n            this.setState(initData, () => {\n                this.yearSelectComponent.f7SmartSelect.setValue(year);\n            });\n        }\n    }\n\n    render() {\n        const {brands, models} = this.props;\n        const {car_id, car_brand_id, years, vin} = this.state;\n        const self = this;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={car_id > 0 ? \"Редактировать машину\" : \"Добавление машины\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете добавить ваш автомобиль(и) для более быстрого подбора услуг.</BlockTitle>\n                <List>\n                    <ListItem\n                        title=\"Марка автомобиля\"\n                        smartSelect\n                        ref={(el) => {this.brandSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти марку',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleBrand(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {brands.map(brand => (\n                                <option\n                                    key={'brand_' + brand.id}\n                                    value={brand.id}\n                                >{brand.car_brand}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Модель\"\n                        smartSelect\n                        ref={(el) => {this.modelSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти модель',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleModel(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {models.filter(x => x.car_brand_id === car_brand_id).map(model => (\n                                <option\n                                    key={'model_' + model.id}\n                                    value={model.id}\n                                >{model.car_model}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Год выпуска\"\n                        ref={(el) => {this.yearSelectComponent = el}}\n                        smartSelect\n                        smartSelectParams={{\n                            openIn: 'sheet',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleYear(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {years.map(year => (<option key={'year_' + year} value={year}>{year}</option>))}\n                        </select>\n                    </ListItem>\n                    <ListInput\n                        label=\"VIN\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Введите VIN номер автомобиля\"\n                        value={vin}\n                        onChange={(event) => this.handleData('vin', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendCar(car_id)}\n                    >{car_id > 0 ? 'Изменить' : 'Добавить'}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        brands: store.carbrands,\n        models: store.carmodels,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddCar: data => dispatch(handleAddCar(data)),\n        handleUpdateCar: data => dispatch(handleUpdateCar(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCarPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    Chip,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\nimport {handleAddRequests} from \"../../actions/DataActions\";\n\nclass NewRequestPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selected_shops: [],\n            shop_id: null,\n            category_id: null,\n            car_id: null,\n            vin: null,\n            text: null,\n        }\n    }\n\n    handleShops = (shops) => {\n        this.setState({ selected_shops: shops, shop_id: shops[0] });\n    };\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    handleCarData = (value) => {\n        const car_id = Number(value);\n        const vin = car_id > 0 ? this.props.cars.find(car => car.id === car_id).vin : '';\n        this.setState({car_id: car_id, vin: vin});\n    };\n\n    set_stores = () => {\n        const app = this.$f7;\n        app.views.main.router.navigate('/stores_list/', {\n            props: {\n                handleShops: this.handleShops,\n                selected_shops: this.state.selected_shops\n            }\n        });\n    };\n\n    sendRequest = () => {\n        let req_data = {...this.state};\n        delete req_data.selected_shops;\n        req_data[\"user_id\"] = this.props.user.id;\n        const set_data = new setData();\n        set_data.data('request-add',req_data).then(data => {\n            this.props.handleAddRequests(data.result);\n        });\n        this.addRequestSuccess.open();\n        this.$f7.views.main.router.navigate('/');\n    };\n\n    addRequestSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Заявка добавлена',\n        text: 'В ближайшее время вам ответят.',\n        closeTimeout: 3000,\n    });\n\n    render() {\n        const {selected_shops, vin} = this.state;\n        const {shops, categories, cars, brands, models} = this.props;\n        const selectedShops = shops.filter(x => selected_shops.indexOf(x.id) !== -1);\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={this.$f7route.params.reqId > 0 ? \"Редактировать заявку\" : \"Новая заявка\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                {/*\n                даты формирования заявки,\n                текста,\n                марки и модели автомобиля,\n                количества ответов магазинов\n                */}\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете оставить заявку на подбор необходимой вам запчасти или услуги.</BlockTitle>\n                <List>\n                    <ListInput\n                        label=\"Категория товара\"\n                        type=\"select\"\n                        placeholder=\"Выберите...\"\n                        onChange={(event) => this.handleData('category_id', event.target.value)}\n                    >\n                        <option key={0} value={null}>Выберите...</option>\n                        {\n                        categories.map((item) =>\n                            <option key={item.id} value={item.id}>{item.category}</option>\n                        )\n                    }\n                    </ListInput>\n                    <ListInput\n                        label=\"Автомобиль\"\n                        type=\"select\"\n                        placeholder=\"Выберите...\"\n                        onChange={(event) => this.handleCarData( event.target.value)}\n                    >\n                        <option key={0} value={null}>Выберите...</option>\n                        {\n                            cars.map(car => (\n                                <option\n                                    key={'car_'+car.id}\n                                    value={car.id}\n                                >{brands.find(brand => brand.id === car.car_brand_id).car_brand\n                                + ' ' + models.find(model => model.id === car.car_model_id).car_model}</option>\n                            ))\n                        }\n                    </ListInput>\n                    <ListInput\n                        outline\n                        label=\"VIN\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Для более быстрого поиска запчасти введите VIN номер автомобиля\"\n                        value={vin}\n                        onChange={(event) => this.handleData('vin', event.target.value)}\n                    />\n                    <ListInput\n                        outline\n                        label=\"Описание\"\n                        floatingLabel\n                        type=\"textarea\"\n                        placeholder=\"Дополнительная информация о требуемом товаре...\"\n                        onChange={(event) => this.handleData('text', event.target.value)}\n                    />\n\n                    <BlockTitle>Запрос в магазин:\n                        <Button\n                            small\n                            fill\n                            onClick={() => this.set_stores()}\n                            style={{float: 'right', display: 'inline-block'}}\n                        >Выбрать</Button>\n                    </BlockTitle>\n                    {\n                        selectedShops.length > 0 ?\n                            (\n                                <Block strong>\n                                    {\n                                        selectedShops.map((item, index) => {\n                                            return <Chip key={index} text={item.name}/>\n                                        })\n                                    }\n                                </Block>\n                            )\n                            : null\n                    }\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={this.sendRequest}\n                    >Отправить заявку</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n        requests: store.requests,\n        shops: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n//handleAddRequests\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddRequests: data => dispatch(handleAddRequests(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewRequestPage)","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {handleResponse} from \"../../actions/DataActions\";\nimport {get} from \"idb-keyval\";\n\nimport {\n    Page,\n    Navbar,\n    List,\n    Icon,\n    ListItem,\n    Block,\n} from 'framework7-react';\n\nconst getResponse = async (props, resp_id) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }else{\n        await get('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }\n};\n\nclass ResponsesPage extends Component {\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n\n    open_response(resp_id) {\n        this.$f7.dialog.preloader('Загружаем предложение...');\n        getResponse(this.props, resp_id).then(() => {\n            this.$f7.views.main.router.navigate('/requests/response/' + resp_id + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    render() {\n        const {request} = this.props;\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложения\"\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        swipeout\n                        after={request.created_at.toLocaleString()}\n                        subtitle={\"Предложений: \" + (request.answers.length || 0) + \"\"}\n                        text={request.text}\n                    >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>\n                                    {this.get_category(request.category_id)}\n                                </span>\n                    </ListItem>\n                </List>\n\n                <List\n                    mediaList\n                    noHairlinesMd\n                    className={\"list-with-header\"}\n                >\n                    {/*\ncreated_at: \"2019-04-09 00:00:00\"\ndescription: \"We have something \"\nid: 1\nis_new: true\nprice: 200\nrequest_id: 1\nshop_id: 7\nstatus_id: 1\nupdated_at: \"2019-04-09 00:00:00\"\nupdated_by: 1\nuser_id: 1\n*/}\n                    {\n                        request.answers.length === 0\n                            ?\n                            <Block>На ваш запрос пока нет ответов...</Block>\n                            :\n                            request.answers.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    onClick={() => this.open_response(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    subtitle={this.get_shop(item.shop_id)}\n                                    text={item.description}\n                                >\n                                    <b slot=\"title\">\n                                        {\n                                            item.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                  color=\"green\"/> : null\n                                        }\n                                        {item.price}</b>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        request: store.request[0],\n        categories: store.stores.categories,\n        shops: store.stores.shops,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsesPage)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    Messages,\n    // MessagesTitle,\n    Messagebar,\n    Link,\n    Message,\n    /* MessagebarAttachment,\n     MessagebarAttachments,\n     MessagebarSheet,\n     MessagebarSheetImage,*/\n    Icon,\n    List,\n    ListItem,\n    Navbar,\n    // NavRight\n} from 'framework7-react';\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {setData} from \"../../axios/setData\";\nimport {get} from \"idb-keyval\";\nimport {handleResponse} from \"../../actions/DataActions\";\n\nconst _ = require('lodash/core');\n\nconst getMessages = async (props, answer_id, loading, sendingData) => {\n    if (!sendingData) {\n        let detect = new Detector();\n        loading.show('yellow');\n        if (await detect.state.online) {\n            let get_data = new getData();\n            await get_data.data('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        } else {\n            await get('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        }\n        setTimeout(() => {\n            loading.hide();\n        }, 500);\n    }\n};\n\nconst sendMessage = async (props, payload, notificationOffline, handleSendingData) => {\n    handleSendingData(true);\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let set_data = new setData();\n        await payload.forEach( async data => {\n            await set_data.data('message-add', data);\n        });\n    }else{\n        notificationOffline.open();\n    }\n    handleSendingData(false);\n};\n\nclass respMessages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messageValue: '',\n            attachments: [],\n            sheetVisible: false,\n            typingMessage: null,\n            messages: this.props.response.messages,\n            messagesData: [\n                {\n                    type: 'received',\n                    message: 'Здравствуйте! 👋<br/>Здесь вы можете уточнить детали заказа.',\n                    date: new Date(),\n                },\n            ],\n            images: [],\n            responseInProgress: false,\n            sendingData: false,\n        }\n    }\n\n    answer_id = this.props.response.id;\n    user = this.props.user;\n\n    notificationOffline = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка подключения',\n        text: 'Попробуйте повторить запрос позже.',\n        closeButton: true,\n    });\n\n    loading = this.$f7.progressbar;\n\n    render() {\n        const {response} = this.props;\n        return (\n            <Page className={\"messages-block\"}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложение\"\n                    backLink=\"Back\"\n                />\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        key={response.id}\n                        onClick={() => this.open_response(response.id)}\n                        after={response.created_at.toLocaleString()}\n                        subtitle={this.get_shop(response.shop_id)}\n                        text={response.description}\n                    >\n                        <b slot=\"title\">\n                            {\n                                response.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                        color=\"green\"/> : null\n                            }\n                            {response.price}</b>\n                    </ListItem>\n                </List>\n                <Messagebar\n                    placeholder={this.placeholder}\n                    ref={(el) => {this.messagebarComponent = el}}\n                    attachmentsVisible={this.attachmentsVisible}\n                    sheetVisible={this.state.sheetVisible}\n                    change={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    value={this.state.messageValue}\n                    //onChange={this.handleMessage.bind(this)}\n                    onInput={this.handleMessage.bind(this)}\n                >\n                    {/* <Link\n                        iconIos=\"f7:camera_fill\"\n                        iconMd=\"material:camera_alt\"\n                        slot=\"inner-start\"\n                        onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    />*/}\n                    <Link\n                        iconIos=\"f7:arrow_up_fill\"\n                        iconMd=\"material:send\"\n                        slot=\"inner-end\"\n                        onClick={this.sendMessage.bind(this)}\n                    />\n                    {/* <MessagebarAttachments>\n                        {this.state.attachments.map((image, index) => (\n                            <MessagebarAttachment\n                                key={index}\n                                image={image}\n                                onAttachmentDelete={() => this.deleteAttachment(image)}\n                            />\n                        ))}\n                    </MessagebarAttachments>\n                    <MessagebarSheet>\n                        {this.state.images.map((image, index) => (\n                            <MessagebarSheetImage\n                                key={index}\n                                image={image}\n                                checked={this.state.attachments.indexOf(image) >= 0}\n                                onChange={this.handleAttachment.bind(this)}\n                            />\n                        ))}\n                    </MessagebarSheet>*/}\n                </Messagebar>\n\n                <Messages\n                    className={\"list-with-header\"}\n                    ref={(el) => {this.messagesComponent = el}}\n                >\n                    {/*<MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>*/}\n\n                    {this.state.messagesData.map((message, index) => (\n                        <Message\n                            key={index}\n                            type={message.type}\n                            image={message.image}\n                            name={message.name}\n                            avatar={message.avatar}\n                            footer={message.date.toLocaleString()}\n                            first={this.isFirstMessage(message, index)}\n                            last={this.isLastMessage(message, index)}\n                            tail={this.isTailMessage(message, index)}\n                        >\n                            {message.message && (\n                                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.message}} />\n                            )}\n                        </Message>\n                    ))}\n                    {this.state.typingMessage && (\n                        <Message\n                            type=\"received\"\n                            typing={true}\n                            first={true}\n                            last={true}\n                            tail={true}\n                            header={`${this.state.typingMessage.name} is typing`}\n                            avatar={this.state.typingMessage.avatar}\n                        />\n                    )}\n                </Messages>\n            </Page>\n        )\n    }\n\n    get attachmentsVisible() {\n        const self = this;\n        return self.state.attachments.length > 0;\n    }\n    get placeholder() {\n        const self = this;\n        return self.state.attachments.length > 0 ? 'Добавьте сообщение или отправьте' : 'Сообщение';\n    }\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n    updateMessages() {\n        const self = this;\n        const messages = self.props.response.messages;\n        console.log('update', messages);\n        if (self.props.response.messages.length) {\n            const messagesData = messages.map((item) => {\n                return {\n                    name: item.user.name,\n                    type: item.user_id === 1 ? 'sent' : 'received',\n                    message: item.message,\n                    date: item.updated_at,\n                }\n            });\n            self.setState({messages: messages, messagesData: messagesData});\n        }\n    }\n\n    // Обновляем сообщения, только если что-то изменилось\n    componentDidUpdate() {\n        const oldData = this.state.messages;\n        const newData = this.props.response.messages;\n        if (!(_.isEqual(newData, oldData))) {\n            this.updateMessages();\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if (!(_.isEqual(nextProps.response.messages, prevState.messages))) {\n            return {response : nextProps.response};\n        }\n        else return null;\n    }\n\n    componentDidMount() {\n        const self = this;\n        this.updateMessages();\n        self.$f7ready(() => {\n            self.messagebar = self.messagebarComponent.f7Messagebar;\n            self.messages = self.messagesComponent.f7Messages;\n        });\n\n        this.intervalId = setInterval(()  =>\n            getMessages(self.props, self.answer_id, self.loading, self.state.sendingData),\n            5000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.intervalId);\n    }\n    isFirstMessage(message, index) {\n        const self = this;\n        const previousMessage = self.state.messagesData[index - 1];\n        if (message.isTitle) return false;\n        return !previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name;\n\n    }\n    isLastMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    isTailMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    deleteAttachment(image) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = attachments.indexOf(image);\n        attachments.splice(index, 1);\n        self.setState({ attachments });\n    }\n    handleAttachment(e) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = self.$$(e.target).parents('label.checkbox').index();\n        const image = self.state.images[index];\n        if (e.target.checked) {\n            // Add to attachments\n            attachments.unshift(image);\n        } else {\n            // Remove from attachments\n            attachments.splice(attachments.indexOf(image), 1);\n        }\n        self.setState({ attachments });\n    }\n\n    handleMessage() {\n        const self = this;\n        let text = self.messagebar.$textareaEl.val();\n        self.setState({messageValue: text});\n    }\n    sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();\n        const messagesToSend = [];\n        self.state.attachments.forEach((attachment) => {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: \"\",\n                attachment: attachment,\n                date: new Date(),\n            });\n        });\n        if (text.trim().length) {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: text,\n                attachment: \"\",\n                date: new Date(),\n            });\n        }\n        if (messagesToSend.length === 0) {\n            return;\n        }\n\n        self.setState({\n            messageValue: '',\n            // Reset attachments\n            attachments: [],\n            // Hide sheet\n            sheetVisible: false,\n            // Send message\n            messagesData: [...self.state.messagesData, ...messagesToSend],\n        });\n\n        sendMessage(this.props, messagesToSend, this.notificationOffline, this.handleSendingData).then(() => {\n            self.messagebar.clear();\n        });\n\n        // Focus area\n        if (text.length) self.messagebar.focus();\n        /*\n                // Mock response\n                if (self.state.responseInProgress) return;\n                self.setState({\n                    responseInProgress: true,\n                });\n                */\n    }\n\n    handleSendingData = (value) => {\n        this.setState({sendingData: value});\n    }\n}\n\n\n\nconst mapStateToProps = store => {\n    return {\n        response: store.response[0],\n        shops: store.stores.shops,\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(respMessages)","import React from 'react';\nimport {\n    Page,\n    Navbar,\n    Messages,\n    MessagesTitle,\n    Messagebar,\n    Link,\n    Message,\n    MessagebarAttachment,\n    MessagebarAttachments,\n    MessagebarSheet,\n    MessagebarSheetImage,\n} from 'framework7-react';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            attachments: [],\n            sheetVisible: false,\n            typingMessage: null,\n            messagesData: [\n                {\n                    type: 'sent',\n                    text: 'Hi, Kate',\n                },\n                {\n                    type: 'sent',\n                    text: 'How are you?',\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Hi, I am good!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    type: 'received',\n                    text: 'Hi there, I am also fine, thanks! And how are you?',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n                {\n                    type: 'sent',\n                    text: 'Hey, Blue Ninja! Glad to see you ;)',\n                },\n                {\n                    type: 'sent',\n                    text: 'Hey, look, cutest kitten ever!',\n                },\n                {\n                    type: 'sent',\n                    image: 'https://cdn.framework7.io/placeholder/cats-200x260-4.jpg',\n\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Nice!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Like it very much!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    type: 'received',\n                    text: 'Awesome!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n            ],\n            images: [\n                'https://cdn.framework7.io/placeholder/cats-300x300-1.jpg',\n                'https://cdn.framework7.io/placeholder/cats-200x300-2.jpg',\n                'https://cdn.framework7.io/placeholder/cats-400x300-3.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x150-4.jpg',\n                'https://cdn.framework7.io/placeholder/cats-150x300-5.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x300-6.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x300-7.jpg',\n                'https://cdn.framework7.io/placeholder/cats-200x300-8.jpg',\n                'https://cdn.framework7.io/placeholder/cats-400x300-9.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x150-10.jpg',\n            ],\n            people: [\n                {\n                    name: 'Kate Johnson',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n            ],\n            answers: [\n                'Yes!',\n                'No',\n                'Hm...',\n                'I am not sure',\n                'And what about you?',\n                'May be ;)',\n                'Lorem ipsum dolor sit amet, consectetur',\n                'What?',\n                'Are you sure?',\n                'Of course',\n                'Need to think about it',\n                'Amazing!!!',\n            ],\n            responseInProgress: false,\n        }\n    }\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    backLink=\"Back\"\n                    title=\"Переписка по заявке\"/>\n\n                <Messagebar\n                    placeholder={this.placeholder}\n                    ref={(el) => {this.messagebarComponent = el}}\n                    attachmentsVisible={this.attachmentsVisible}\n                    sheetVisible={this.state.sheetVisible}\n                    change={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                >\n                    <Link\n                        iconIos=\"f7:camera_fill\"\n                        iconMd=\"material:camera_alt\"\n                        slot=\"inner-start\"\n                        onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    />\n                    <Link\n                        iconIos=\"f7:arrow_up_fill\"\n                        iconMd=\"material:send\"\n                        slot=\"inner-end\"\n                        onClick={this.sendMessage.bind(this)}\n                    />\n                    <MessagebarAttachments>\n                        {this.state.attachments.map((image, index) => (\n                            <MessagebarAttachment\n                                key={index}\n                                image={image}\n                                onAttachmentDelete={() => this.deleteAttachment(image)}\n                            />\n                        ))}\n                    </MessagebarAttachments>\n                    <MessagebarSheet>\n                        {this.state.images.map((image, index) => (\n                            <MessagebarSheetImage\n                                key={index}\n                                image={image}\n                                checked={this.state.attachments.indexOf(image) >= 0}\n                                onChange={this.handleAttachment.bind(this)}\n                            />\n                        ))}\n                    </MessagebarSheet>\n                </Messagebar>\n\n                <Messages ref={(el) => {this.messagesComponent = el}}>\n                    <MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>\n\n                    {this.state.messagesData.map((message, index) => (\n                        <Message\n                            key={index}\n                            type={message.type}\n                            image={message.image}\n                            name={message.name}\n                            avatar={message.avatar}\n                            first={this.isFirstMessage(message, index)}\n                            last={this.isLastMessage(message, index)}\n                            tail={this.isTailMessage(message, index)}\n                        >\n                            {message.text && (\n                                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.text}} />\n                            )}\n                        </Message>\n                    ))}\n                    {this.state.typingMessage && (\n                        <Message\n                            type=\"received\"\n                            typing={true}\n                            first={true}\n                            last={true}\n                            tail={true}\n                            header={`${this.state.typingMessage.name} is typing`}\n                            avatar={this.state.typingMessage.avatar}\n                        />\n                    )}\n                </Messages>\n            </Page>\n        )\n    }\n\n    get attachmentsVisible() {\n        const self = this;\n        return self.state.attachments.length > 0;\n    }\n    get placeholder() {\n        const self = this;\n        return self.state.attachments.length > 0 ? 'Add comment or Send' : 'Message';\n    }\n    componentDidMount() {\n        const self = this;\n        self.$f7ready(() => {\n            self.messagebar = self.messagebarComponent.f7Messagebar;\n            self.messages = self.messagesComponent.f7Messages;\n        });\n    }\n    isFirstMessage(message, index) {\n        const self = this;\n        const previousMessage = self.state.messagesData[index - 1];\n        if (message.isTitle) return false;\n        if (!previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name) return true;\n        return false;\n    }\n    isLastMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;\n        return false;\n    }\n    isTailMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;\n        return false;\n    }\n    deleteAttachment(image) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = attachments.indexOf(image);\n        attachments.splice(index, 1);\n        self.setState({ attachments });\n    }\n    handleAttachment(e) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = self.$$(e.target).parents('label.checkbox').index();\n        const image = self.state.images[index];\n        if (e.target.checked) {\n            // Add to attachments\n            attachments.unshift(image);\n        } else {\n            // Remove from attachments\n            attachments.splice(attachments.indexOf(image), 1);\n        }\n        self.setState({ attachments });\n    }\n    sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();\n        const messagesToSend = [];\n        self.state.attachments.forEach((attachment) => {\n            messagesToSend.push({\n                image: attachment,\n            });\n        });\n        if (text.trim().length) {\n            messagesToSend.push({\n                text,\n            });\n        }\n        if (messagesToSend.length === 0) {\n            return;\n        }\n\n        self.setState({\n            // Reset attachments\n            attachments: [],\n            // Hide sheet\n            sheetVisible: false,\n            // Send message\n            messagesData: [...self.state.messagesData, ...messagesToSend],\n        });\n        self.messagebar.clear();\n\n        // Focus area\n        if (text.length) self.messagebar.focus();\n\n        // Mock response\n        if (self.state.responseInProgress) return;\n        self.setState({\n            responseInProgress: true,\n        });\n        setTimeout(() => {\n            const answer = self.state.answers[Math.floor(Math.random() * self.state.answers.length)];\n            const person = self.state.people[Math.floor(Math.random() * self.state.people.length)];\n            self.setState({\n                typingMessage: {\n                    name: person.name,\n                    avatar: person.avatar,\n                },\n            });\n            setTimeout(() => {\n                self.setState({\n                    messagesData: [...self.state.messagesData, {\n                        text: answer,\n                        type: 'received',\n                        name: person.name,\n                        avatar: person.avatar,\n                    }],\n                    typingMessage: null,\n                    responseInProgress: false,\n                });\n            }, 4000);\n        }, 1000);\n    }\n};","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    Navbar,\n    NavRight,\n    Link,\n    Page\n} from 'framework7-react';\nimport {setData} from \"../../axios/setData\";\nimport {handleDeleteCar} from \"../../actions/DataActions\";\n\n\n\nclass carsPage extends React.Component {\n\n    deleteCar = (car_id) => {\n        const set_data = new setData();\n        if (car_id > 0) {\n            set_data.dataDelete('car-detele/'+car_id).then(() => {\n               this.props.handleDeleteCar(car_id);\n            });\n        }\n    };\n\n    deleteHandle(car_id) {\n        const app = this.$f7;\n        app.dialog.confirm('Эта операция необратима', 'Удалить автомобиль?', () => this.deleteCar(car_id), () => {});\n    }\n    newCar() {\n        const carId = 0;\n        this.$f7.views.main.router.navigate('/open_car/' + carId + '/');\n    }\n    editHandle(carId) {\n        this.$f7.views.main.router.navigate('/open_car/' + carId + '/');\n    }\n\n    render() {\n        const {cars, brands, models} = this.props;\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Мои автомобили\"\n                    backLink=\"Back\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:add\" onClick={() => this.newCar()}/>\n                    </NavRight>\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        cars.map(car => (\n                            <ListItem\n                                key={'car_' + car.id}\n                                swipeout\n                                after={car.year}\n                                subtitle={\"VIN: \" + car.vin}\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"directions_car\" color=\"blue\"/>\n                                    {\n                                        ' ' + brands.find(brand => brand.id === car.car_brand_id).car_brand\n                                        + ' ' + models.find(model => model.id === car.car_model_id).car_model\n                                    }\n                                </span>\n                                <SwipeoutActions left>\n                                    <SwipeoutButton color=\"blue\" onClick={() => this.editHandle(car.id)}>\n                                        <Icon material=\"edit\"/> Изменить\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                                <SwipeoutActions right>\n                                    <SwipeoutButton color=\"#cb2128\" onClick={() => this.deleteHandle(car.id)}>\n                                        <Icon material=\"delete\"/> Удалить\n                                    </SwipeoutButton>\n                            </SwipeoutActions>\n                            </ListItem>\n                        ))\n                    }\n\n                </List>\n            </Page>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = store => {\n    return {\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDeleteCar: data => dispatch(handleDeleteCar(data)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(carsPage)","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n    Page,\n    Navbar,\n    List,\n    Subnavbar,\n    Searchbar,\n    Block,\n    ListItem,\n    Link,\n    NavRight\n} from 'framework7-react';\n\nclass ShopsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            vlData: {\n                items: [],\n            },\n            selectedShops: [],\n        };\n    }\n\n    searchAll = (query, items) => {\n        const found = [];\n        for (let i = 0; i < items.length; i += 1) {\n            if (items[i].name.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);\n        }\n        return found; // return array with mathced indexes\n    };\n\n    renderExternal(vl, vlData) {\n        this.setState({ vlData });\n    }\n\n    handleToggle = (item) => {\n        this.setState({selectedShops: [item.id]});\n        /*\n        let selectedShops = this.state.selectedShops;\n        item.checked = (item.hasOwnProperty('checked')) ? !item.checked : true;\n        if (item.checked) {\n            selectedShops.push(item.id);\n        } else {\n            selectedShops = selectedShops.filter(x => x !== item.id);\n        }\n        this.setState({selectedShops: selectedShops});\n        */\n    };\n\n    setShops = () => {\n        this.props.handleShops(this.state.selectedShops);\n        this.$f7router.back();\n    };\n\n    componentDidMount() {\n        const {shops, selected_shops} = this.props;\n        this.setState({selectedShops: [...selected_shops]});\n        shops.forEach((item) => {\n            item.checked = [...selected_shops].indexOf(item.id) !== -1;\n        })\n    }\n\n    render() {\n        const {shops} = this.props;\n        const {vlData, selectedShops} = this.state;\n        return (\n            <Page\n                className=\"stores-list\">\n                <Navbar title=\"Список магазинов\"\n                        backLink=\"Back\"\n                        bgColor=\"main\"\n                        textColor=\"white\"\n                        color=\"white\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:done\" onClick={() => this.setShops()}/>\n                    </NavRight>\n                    <Subnavbar inner={false} className={\"search-bar\"}>\n                        <Searchbar\n                            searchContainer=\".virtual-list\"\n                            searchItem=\"li\"\n                            searchIn=\".item-title\"\n                            placeholder=\"Поиск\"\n                        />\n                    </Subnavbar>\n                </Navbar>\n                <Block>\n                    <p>Здесь вы можете выбрать в какой магазин хотите отправить запрос</p>\n                </Block>\n                <List className=\"searchbar-not-found\">\n                    <ListItem title=\"Магазины не найдены...\"/>\n                </List>\n                <List\n                    className=\"searchbar-found\"\n                    medialList\n                    virtualList\n                    virtualListParams={\n                        {\n                            items: shops,\n                            searchAll: this.searchAll,\n                            renderExternal: this.renderExternal.bind(this),\n                            height: this.$theme.ios ? 63 : 73\n                        }\n                    }\n                >\n                    <ul>\n                        {vlData.items.map((item, index) => (\n                            <ListItem\n                                key={index}\n                                mediaItem\n                                radio\n                                checked={selectedShops.indexOf(item.id) !== -1 /*item.checked*/}\n                                onClick={() => this.handleToggle(item)}\n                                title={item.name}\n                                subtitle={item.address}\n                                after={item.phone}\n                                style={{top: `${vlData.topPosition}px`}}\n                            />\n                        ))}\n                    </ul>\n                </List>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        shops: store.stores.shops,\n    }\n};\n\nexport default connect(mapStateToProps)(ShopsList)","import { set, get } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class authorisation {\n\n    login = async (...args) => {\n        const url = '/login';\n        const payload = {\n            email: args[0],\n            password: args[1],\n            application: 'marshal'\n        };\n        let res = 'test';\n        await get('AUTH_TOKEN').then( async value => {\n            if (value === undefined) {\n                try {\n                    let response = await axios.post(url, payload);\n                    let AUTH_TOKEN = response.data.access_token;\n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n                    set('AUTH_TOKEN', AUTH_TOKEN).then();\n                    res = await this.user_details();\n\n                } catch (error) {\n                    res = error.response;\n                }\n            }else{\n                res = await this.user_details();\n                console.log(res);\n            }\n        });\n        return res;\n    };\n\n    user_details = async () => {\n        const url = '/details';\n        const payload = {};\n        try {\n            return await axios.get(url, payload);\n        } catch (error) {\n            return error.response;\n        }\n    }\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    List,\n    ListInput,\n    Button,\n    BlockFooter,\n    Link,\n    LoginScreenTitle\n} from 'framework7-react';\n\nimport { authorisation } from '../../axios/login'\nimport { handleLogin } from '../../actions/UserActions'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputLogin: '',\n            inputPassword: '',\n        };\n    }\n\n    authError = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка авторизации',\n        text: 'Проверьте имя пользователя и пароль.',\n        closeButton: true,\n    });\n\n    authSuccess = (name) => this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Добро пожаловать ' + name + '!',\n        closeTimeout: 3000,\n    });\n\n    handleOnChange = prop => event => {\n      this.setState({[prop]: event.target.value});\n    };\n\n    async authentication() {\n        const self = this;\n        self.$f7.dialog.preloader();\n\n        const auth = new authorisation();\n        const { inputLogin, inputPassword} = this.state;\n        const response = await auth.login(inputLogin, inputPassword);\n        if (response.status === 401) {\n            this.authError.open();\n        } else if (response.status === 200) {\n            this.authSuccess(response.data.success.name).open();\n            this.$f7.views.main.router.navigate('/');\n        }\n        self.$f7.dialog.close();\n        this.props.handleLogin(response.data.success);\n    }\n    render() {\n\n        const { inputLogin, inputPassword} = this.state;\n\n        return (\n            <Page loginScreen>\n                <LoginScreenTitle>Войти</LoginScreenTitle>\n                <List form>\n                    <ListInput\n                        label=\"Email\"\n                        name=\"username\"\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={inputLogin}\n                        onChange={this.handleOnChange('inputLogin')}\n                    />\n                    <ListInput\n                        label=\"Password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={inputPassword}\n                        onChange={this.handleOnChange('inputPassword')}\n                    />\n\n                    <BlockFooter>\n                        <Button fill onClick={()=>this.authentication()}>Войти</Button>\n                    </BlockFooter>\n                </List>\n\n                <List>\n                    <BlockFooter>\n                        <p><Link>Зарегистрироваться</Link></p>\n                        <p>Для восстановления пароля нажмите <Link>ссылку</Link></p>\n                    </BlockFooter>\n                </List>\n            </Page>\n        )\n    }\n}\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import HomePage from './components/pages/HomePage';\nimport AboutPage from './components/pages/AboutPage';\nimport FormPage from './components/pages/FormPage';\nimport DynamicRoutePage from './components/pages/DynamicRoutePage';\nimport NotFoundPage from './components/pages/NotFoundPage';\nimport PanelLeftPage from './components/pages/PanelLeftPage';\nimport PanelRightPage from './components/pages/PanelRightPage';\nimport NewCarPage from \"./components/pages/NewCarPage\";\nimport NewRequestPage from \"./components/pages/NewRequestPage\";\nimport ResponsesPage from \"./components/pages/ResponsesPage\";\nimport ResponsePage from \"./components/pages/ResponsePage\";\nimport ChatPage from \"./components/pages/ChatPage\";\nimport CarsPage from \"./components/pages/CarsPage\";\nimport StoresList from \"./components/pages/StoresList\";\nimport LoginPage from \"./components/pages/LoginPage\";\n\nexport default [\n    {\n        path: '/',\n        component: HomePage,\n    },\n    {\n        path: '/panel-left/',\n        component: PanelLeftPage,\n    },\n    {\n        path: '/panel-right/',\n        component: PanelRightPage,\n    },\n    {\n        path: '/about/',\n        component: AboutPage,\n    },\n    {\n        path: '/form/',\n        component: FormPage,\n    },\n    {\n        path: '/login/',\n        component: LoginPage,\n    },\n    {\n        path: '/messages/',\n        component: ChatPage,\n    },\n    {\n        path: '/cars/',\n        component: CarsPage,\n    },\n    {\n        path: '/dynamic-route/blog/:blogId/post/:postId/',\n        component: DynamicRoutePage,\n    },\n    {\n        path: '/open_request/:reqId/',\n        component: NewRequestPage,\n    },\n    {\n        path: '/open_car/:carId/',\n        component: NewCarPage,\n    },\n    {\n        path: '/requests/:reqId/',\n        component: ResponsesPage,\n    },\n    {\n        path: '/requests/response/:reqId/',\n        component: ResponsePage,\n    },\n    {\n        path: '/stores_list/',\n        component: StoresList,\n    },\n    {\n        path: '(.*)',\n        component: NotFoundPage,\n    },\n];\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Left Panel\" />\n    <Block strong>\n      <p>Left panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Right Panel\" />\n    <Block strong>\n      <p>Right panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"About\" backLink=\"Back\"></Navbar>\n    <BlockTitle>About My App</BlockTitle>\n    <Block strong>\n      <p>Here is About page!</p>\n      <p>You can go <Link back>back</Link>.</p>\n      <p>Mauris posuere sit amet metus id venenatis. Ut ante dolor, tempor nec commodo rutrum, varius at sem. Nullam ac nisi non neque ornare pretium. Nulla mauris mauris, consequat et elementum sit amet, egestas sed orci. In hac habitasse platea dictumst.</p>\n      <p>Fusce eros lectus, accumsan eget mi vel, iaculis tincidunt felis. Nulla tincidunt pharetra sagittis. Fusce in felis eros. Nulla sit amet aliquam lorem, et gravida ipsum. Mauris consectetur nisl non sollicitudin tristique. Praesent vitae metus ac quam rhoncus mattis vel et nisi. Aenean aliquet, felis quis dignissim iaculis, lectus quam tincidunt ligula, et venenatis turpis risus sed lorem. Morbi eu metus elit. Ut vel diam dolor.</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block\n} from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Form\" backLink=\"Back\" />\n    <BlockTitle>Form Example</BlockTitle>\n    <List form>\n      <ListInput\n        label=\"Name\"\n        type=\"text\"\n        placeholder=\"Name\"\n      />\n      <ListInput\n        label=\"E-mail\"\n        type=\"email\"\n        placeholder=\"E-mail\"\n      />\n      <ListInput\n        label=\"URL\"\n        type=\"url\"\n        placeholder=\"URL\"\n      />\n      <ListInput\n        label=\"Password\"\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <ListInput\n        label=\"Phone\"\n        type=\"tel\"\n        placeholder=\"Phone\"\n      />\n      <ListInput\n        label=\"Gender\"\n        type=\"select\"\n        defaultValue=\"Male\"\n      >\n        <option>Male</option>\n        <option>Female</option>\n      </ListInput>\n      <ListInput\n        label=\"Birth date\"\n        type=\"date\"\n        placeholder=\"Birth date\" value=\"2014-04-30\"\n      />\n      <ListItem title=\"Toggle\">\n        <Toggle slot=\"after\" />\n      </ListItem>\n      <ListInput\n        label=\"Slider\"\n        input={false}\n      >\n        <Range label={true} slot=\"input\" min={0} max={100} value={50} step={1} />\n      </ListInput>\n      <ListInput\n        label=\"Textarea\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n      />\n      <ListInput\n        label=\"Resizable\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n        resizable\n      />\n    </List>\n\n    <BlockTitle>Checkbox group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} checkbox name=\"my-checkbox\" value={n + 1} title={`Checkbox ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Radio buttons group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} radio name=\"my-radio\" defaultChecked={n === 0} value={n + 1} title={`Radio ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Buttons</BlockTitle>\n    <Block strong>\n      <Row tag=\"p\">\n        <Button className=\"col\">Button</Button>\n        <Button className=\"col\" fill>Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" raised>Raised</Button>\n        <Button className=\"col\" raised fill>Raised Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" round>Round</Button>\n        <Button className=\"col\" round fill>Round Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" outline>Outline</Button>\n        <Button className=\"col\" round outline>Outline Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small outline>Small</Button>\n        <Button className=\"col\" small round outline>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small fill>Small</Button>\n        <Button className=\"col\" small round fill>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large raised>Large</Button>\n        <Button className=\"col\" large fill raised>Large Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large fill raised color=\"red\">Large Red</Button>\n        <Button className=\"col\" large fill raised color=\"green\">Large Green</Button>\n      </Row>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar\n        title=\"Ошибка\"\n        backLink=\"Back\"\n        color=\"white\"\n        textColor=\"white\"\n        bgColor=\"main\"\n    />\n    <Block strong>\n      <p>Как вы сюда попали?..</p>\n      <p>Страница не найдена.</p>\n    </Block>\n  </Page>\n);\n","// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport './css/app.css';\nimport 'framework7/css/framework7.bundle.css';\nimport './css/icons.css';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n\n","import React from 'react';\n\nimport {Provider} from 'react-redux';\nimport {store} from '../store/configureStore';\n\nimport {\n    App,\n    Panel,\n    View,\n    Statusbar,\n    Popup,\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Block,\n} from 'framework7-react';\n\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n    const params = {\n        themeDark: false,\n        mainColor: 'red'\n    };\n\n    // Framework7 parameters here\n    const f7params = {\n        id: 'ru.bhapp.marshal', // App bundle ID\n        name: 'marshal', // App name\n        theme: 'md', // Automatic theme detection\n        // App routes\n        routes,\n    };\n\n    return (\n        <Provider store={store}>\n            <App params={f7params} themeDark={params.themeDark} color={params.mainColor}>\n                {/* Statusbar */}\n                <Statusbar/>\n\n                {/* Left Panel */}\n                <Panel left cover themeDark>\n                    <View url=\"/panel-left/\"/>\n                </Panel>\n\n                {/* Right Panel */}\n                <Panel right reveal themeDark>\n                    <View url=\"/panel-right/\"/>\n                </Panel>\n\n                {/* Main View */}\n                <View id=\"main-view\" url=\"/\" main className=\"safe-areas\"/>\n\n                {/* Popup */}\n                <Popup id=\"popup\">\n                    <View>\n                        <Page>\n                            <Navbar title=\"Popup\">\n                                <NavRight>\n                                    <Link popupClose>Close</Link>\n                                </NavRight>\n                            </Navbar>\n                            <Block>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque, architecto.\n                                Cupiditate laudantium rem nesciunt numquam, ipsam. Voluptates omnis, a inventore atque\n                                ratione aliquam. Omnis iusto nemo quos ullam obcaecati, quod.</Block>\n                        </Page>\n                    </View>\n                </Popup>\n\n            </App>\n        </Provider>\n    );\n};\n"],"sourceRoot":""}